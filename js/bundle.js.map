{"version":3,"sources":["node_modules/browser-pack/_prelude.js","node_modules/events/events.js","src/CircularBuffer.js","src/IDE-browser.js","src/Models/Model.js","src/Views/ConsoleView.js","src/Views/DocumentationView.js","src/Views/EditorView.js","src/Views/FileView.js","src/Views/GitView.js","src/Views/ProjectView.js","src/Views/SettingsView.js","src/Views/TabView.js","src/Views/ToolbarView.js","src/Views/View.js","src/console.js","src/main.js","src/parser.js","src/popup.js"],"names":[],"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","file":"bundle.js","sourcesContent":["(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})","// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\nfunction EventEmitter() {\n  this._events = this._events || {};\n  this._maxListeners = this._maxListeners || undefined;\n}\nmodule.exports = EventEmitter;\n\n// Backwards-compat with node 0.10.x\nEventEmitter.EventEmitter = EventEmitter;\n\nEventEmitter.prototype._events = undefined;\nEventEmitter.prototype._maxListeners = undefined;\n\n// By default EventEmitters will print a warning if more than 10 listeners are\n// added to it. This is a useful default which helps finding memory leaks.\nEventEmitter.defaultMaxListeners = 10;\n\n// Obviously not all Emitters should be limited to 10. This function allows\n// that to be increased. Set to zero for unlimited.\nEventEmitter.prototype.setMaxListeners = function(n) {\n  if (!isNumber(n) || n < 0 || isNaN(n))\n    throw TypeError('n must be a positive number');\n  this._maxListeners = n;\n  return this;\n};\n\nEventEmitter.prototype.emit = function(type) {\n  var er, handler, len, args, i, listeners;\n\n  if (!this._events)\n    this._events = {};\n\n  // If there is no 'error' event listener then throw.\n  if (type === 'error') {\n    if (!this._events.error ||\n        (isObject(this._events.error) && !this._events.error.length)) {\n      er = arguments[1];\n      if (er instanceof Error) {\n        throw er; // Unhandled 'error' event\n      } else {\n        // At least give some kind of context to the user\n        var err = new Error('Uncaught, unspecified \"error\" event. (' + er + ')');\n        err.context = er;\n        throw err;\n      }\n    }\n  }\n\n  handler = this._events[type];\n\n  if (isUndefined(handler))\n    return false;\n\n  if (isFunction(handler)) {\n    switch (arguments.length) {\n      // fast cases\n      case 1:\n        handler.call(this);\n        break;\n      case 2:\n        handler.call(this, arguments[1]);\n        break;\n      case 3:\n        handler.call(this, arguments[1], arguments[2]);\n        break;\n      // slower\n      default:\n        args = Array.prototype.slice.call(arguments, 1);\n        handler.apply(this, args);\n    }\n  } else if (isObject(handler)) {\n    args = Array.prototype.slice.call(arguments, 1);\n    listeners = handler.slice();\n    len = listeners.length;\n    for (i = 0; i < len; i++)\n      listeners[i].apply(this, args);\n  }\n\n  return true;\n};\n\nEventEmitter.prototype.addListener = function(type, listener) {\n  var m;\n\n  if (!isFunction(listener))\n    throw TypeError('listener must be a function');\n\n  if (!this._events)\n    this._events = {};\n\n  // To avoid recursion in the case that type === \"newListener\"! Before\n  // adding it to the listeners, first emit \"newListener\".\n  if (this._events.newListener)\n    this.emit('newListener', type,\n              isFunction(listener.listener) ?\n              listener.listener : listener);\n\n  if (!this._events[type])\n    // Optimize the case of one listener. Don't need the extra array object.\n    this._events[type] = listener;\n  else if (isObject(this._events[type]))\n    // If we've already got an array, just append.\n    this._events[type].push(listener);\n  else\n    // Adding the second element, need to change to array.\n    this._events[type] = [this._events[type], listener];\n\n  // Check for listener leak\n  if (isObject(this._events[type]) && !this._events[type].warned) {\n    if (!isUndefined(this._maxListeners)) {\n      m = this._maxListeners;\n    } else {\n      m = EventEmitter.defaultMaxListeners;\n    }\n\n    if (m && m > 0 && this._events[type].length > m) {\n      this._events[type].warned = true;\n      console.error('(node) warning: possible EventEmitter memory ' +\n                    'leak detected. %d listeners added. ' +\n                    'Use emitter.setMaxListeners() to increase limit.',\n                    this._events[type].length);\n      if (typeof console.trace === 'function') {\n        // not supported in IE 10\n        console.trace();\n      }\n    }\n  }\n\n  return this;\n};\n\nEventEmitter.prototype.on = EventEmitter.prototype.addListener;\n\nEventEmitter.prototype.once = function(type, listener) {\n  if (!isFunction(listener))\n    throw TypeError('listener must be a function');\n\n  var fired = false;\n\n  function g() {\n    this.removeListener(type, g);\n\n    if (!fired) {\n      fired = true;\n      listener.apply(this, arguments);\n    }\n  }\n\n  g.listener = listener;\n  this.on(type, g);\n\n  return this;\n};\n\n// emits a 'removeListener' event iff the listener was removed\nEventEmitter.prototype.removeListener = function(type, listener) {\n  var list, position, length, i;\n\n  if (!isFunction(listener))\n    throw TypeError('listener must be a function');\n\n  if (!this._events || !this._events[type])\n    return this;\n\n  list = this._events[type];\n  length = list.length;\n  position = -1;\n\n  if (list === listener ||\n      (isFunction(list.listener) && list.listener === listener)) {\n    delete this._events[type];\n    if (this._events.removeListener)\n      this.emit('removeListener', type, listener);\n\n  } else if (isObject(list)) {\n    for (i = length; i-- > 0;) {\n      if (list[i] === listener ||\n          (list[i].listener && list[i].listener === listener)) {\n        position = i;\n        break;\n      }\n    }\n\n    if (position < 0)\n      return this;\n\n    if (list.length === 1) {\n      list.length = 0;\n      delete this._events[type];\n    } else {\n      list.splice(position, 1);\n    }\n\n    if (this._events.removeListener)\n      this.emit('removeListener', type, listener);\n  }\n\n  return this;\n};\n\nEventEmitter.prototype.removeAllListeners = function(type) {\n  var key, listeners;\n\n  if (!this._events)\n    return this;\n\n  // not listening for removeListener, no need to emit\n  if (!this._events.removeListener) {\n    if (arguments.length === 0)\n      this._events = {};\n    else if (this._events[type])\n      delete this._events[type];\n    return this;\n  }\n\n  // emit removeListener for all listeners on all events\n  if (arguments.length === 0) {\n    for (key in this._events) {\n      if (key === 'removeListener') continue;\n      this.removeAllListeners(key);\n    }\n    this.removeAllListeners('removeListener');\n    this._events = {};\n    return this;\n  }\n\n  listeners = this._events[type];\n\n  if (isFunction(listeners)) {\n    this.removeListener(type, listeners);\n  } else if (listeners) {\n    // LIFO order\n    while (listeners.length)\n      this.removeListener(type, listeners[listeners.length - 1]);\n  }\n  delete this._events[type];\n\n  return this;\n};\n\nEventEmitter.prototype.listeners = function(type) {\n  var ret;\n  if (!this._events || !this._events[type])\n    ret = [];\n  else if (isFunction(this._events[type]))\n    ret = [this._events[type]];\n  else\n    ret = this._events[type].slice();\n  return ret;\n};\n\nEventEmitter.prototype.listenerCount = function(type) {\n  if (this._events) {\n    var evlistener = this._events[type];\n\n    if (isFunction(evlistener))\n      return 1;\n    else if (evlistener)\n      return evlistener.length;\n  }\n  return 0;\n};\n\nEventEmitter.listenerCount = function(emitter, type) {\n  return emitter.listenerCount(type);\n};\n\nfunction isFunction(arg) {\n  return typeof arg === 'function';\n}\n\nfunction isNumber(arg) {\n  return typeof arg === 'number';\n}\n\nfunction isObject(arg) {\n  return typeof arg === 'object' && arg !== null;\n}\n\nfunction isUndefined(arg) {\n  return arg === void 0;\n}\n","function CircularBuffer(capacity){\n\tif(!(this instanceof CircularBuffer))return new CircularBuffer(capacity);\n\tif(typeof capacity!=\"number\"||capacity%1!=0||capacity<1)\n\t\tthrow new TypeError(\"Invalid capacity\");\n\n\tthis._buffer=new Array(capacity);\n\tthis._capacity=capacity;\n\tthis._first=0;\n\tthis._size=0;\n}\n\nCircularBuffer.prototype={\n\tsize:function(){return this._size;},\n\tcapacity:function(){return this._capacity;},\n\tenq:function(value){\n\t\tif(this._first>0)this._first--; else this._first=this._capacity-1;\n\t\tthis._buffer[this._first]=value;\n\t\tif(this._size<this._capacity)this._size++;\n\t},\n\tpush:function(value){\n\t\tif(this._size==this._capacity){\n\t\t\tthis._buffer[this._first]=value;\n\t\t\tthis._first=(this._first+1)%this._capacity;\n\t\t} else {\n\t\t\tthis._buffer[(this._first+this._size)%this._capacity]=value;\n\t\t\tthis._size++;\n\t\t}\n\t},\n\tdeq:function(){\n\t\tif(this._size==0)throw new RangeError(\"dequeue on empty buffer\");\n\t\tvar value=this._buffer[(this._first+this._size-1)%this._capacity];\n\t\tthis._size--;\n\t\treturn value;\n\t},\n\tpop:function(){return this.deq();},\n\tshift:function(){\n\t\tif(this._size==0)throw new RangeError(\"shift on empty buffer\");\n\t\tvar value=this._buffer[this._first];\n\t\tif(this._first==this._capacity-1)this._first=0; else this._first++;\n\t\tthis._size--;\n\t\treturn value;\n\t},\n\tget:function(start,end){\n\t\tif(this._size==0&&start==0&&(end==undefined||end==0))return [];\n\t\tif(typeof start!=\"number\"||start%1!=0||start<0)throw new TypeError(\"Invalid start\");\n\t\tif(start>=this._size)throw new RangeError(\"Index past end of buffer: \"+start);\n\n\t\tif(end==undefined)return this._buffer[(this._first+start)%this._capacity];\n\n\t\tif(typeof end!=\"number\"||end%1!=0||end<0)throw new TypeError(\"Invalid end\");\n\t\tif(end>=this._size)throw new RangeError(\"Index past end of buffer: \"+end);\n\n\t\tif(this._first+start>=this._capacity){\n\t\t\t//make sure first+start and first+end are in a normal range\n\t\t\tstart-=this._capacity; //becomes a negative number\n\t\t\tend-=this._capacity;\n\t\t}\n\t\tif(this._first+end<this._capacity)\n\t\t\treturn this._buffer.slice(this._first+start,this._first+end+1);\n\t\telse\n\t\t\treturn this._buffer.slice(this._first+start,this._capacity).concat(this._buffer.slice(0,this._first+end+1-this._capacity));\n\t},\n\ttoarray:function(){\n\t\tif(this._size==0)return [];\n\t\treturn this.get(0,this._size-1);\n\t}\n};\n\nmodule.exports=CircularBuffer;","// IDE controller\nmodule.exports = {};\n\nvar Model = require('./Models/Model');\nvar popup = require('./popup');\n\n// set up models\nvar models = {};\nmodels.project = new Model();\nmodels.settings = new Model();\nmodels.status = new Model();\nmodels.error = new Model();\nmodels.git = new Model();\n\n// hack to prevent first status update causing wrong notifications\nmodels.status.setData({running: false, building: false});\n \n// set up views\n// tab view\nvar tabView = require('./Views/TabView');\ntabView.on('change', () => editorView.emit('resize') );\n\n// settings view\nvar settingsView = new (require('./Views/SettingsView'))('settingsManager', [models.project, models.settings], models.settings);\nsettingsView.on('project-settings', (data) => {\n\tdata.currentProject = models.project.getKey('currentProject');\n\t//console.log('project-settings', data);\n\t//console.trace('project-settings');\n\tsocket.emit('project-settings', data);\n});\nsettingsView.on('IDE-settings', (data) => {\n\tdata.currentProject = models.project.getKey('currentProject');\n\t//console.log('IDE-settings', data);\n\tsocket.emit('IDE-settings', data);\n});\nsettingsView.on('run-on-boot', project => socket.emit('run-on-boot', project) );\nsettingsView.on('halt', () => {\n\tsocket.emit('sh-command', 'halt');\n\tconsoleView.emit('warn', 'Shutting down...');\n});\nsettingsView.on('warning', text => consoleView.emit('warn', text) );\nsettingsView.on('upload-update', data => socket.emit('upload-update', data) );\nsettingsView.on('error', text => consoleView.emit('warn', text) );\n\n// project view\nvar projectView = new (require('./Views/ProjectView'))('projectManager', [models.project]);\nprojectView.on('message', (event, data) => {\n\tif (!data.currentProject && models.project.getKey('currentProject')){\n\t\tdata.currentProject = models.project.getKey('currentProject');\n\t}\n\tdata.timestamp = performance.now();\n\tconsoleView.emit('openNotification', data);\n\tsocket.emit(event, data);\n});\n\n// file view\nvar fileView = new (require('./Views/FileView'))('fileManager', [models.project, models.settings]);\nfileView.on('message', (event, data) => {\n\tif (!data.currentProject && models.project.getKey('currentProject')){\n\t\tdata.currentProject = models.project.getKey('currentProject');\n\t}\n\tif (!data.fileName && models.project.getKey('fileName')){\n\t\tdata.fileName = models.project.getKey('fileName');\n\t}\n\tdata.timestamp = performance.now();\n\tconsoleView.emit('openNotification', data);\n\tsocket.emit(event, data);\n});\nfileView.on('force-rebuild', () => {\n\tsocket.emit('process-event', {\n\t\tevent\t\t\t: 'rebuild',\n\t\tcurrentProject\t: models.project.getKey('currentProject')\n\t});\n});\nfileView.on('file-rejected', filename => {\n\tvar timestamp = performance.now();\n\tconsoleView.emit('openNotification', {func: 'fileRejected', timestamp});\n\tconsoleView.emit('closeNotification', {error: '... failed, file '+filename+' already exists. Refresh to allow overwriting', timestamp});\n});\n\n// editor view\nvar editorView = new (require('./Views/EditorView'))('editor', [models.project, models.error, models.settings], models.settings);\neditorView.on('upload', fileData => {\n\tsocket.emit('process-event', {\n\t\tevent\t\t\t: 'upload',\n\t\tcurrentProject\t: models.project.getKey('currentProject'),\n\t\tnewFile\t\t\t: models.project.getKey('fileName'),\n\t\tfileData,\n\t\tcheckSyntax\t\t: parseInt(models.settings.getKey('liveSyntaxChecking'))\n\t});\n});\neditorView.on('check-syntax', () => {\n\tif (parseInt(models.settings.getKey('liveSyntaxChecking'))){\n\t\tsocket.emit('process-event', {\n\t\t\tevent\t\t\t: 'checkSyntax',\n\t\t\tcurrentProject\t: models.project.getKey('currentProject'),\n\t\t\tnewFile\t\t\t: models.project.getKey('fileName')\n\t\t});\n\t}\n});\neditorView.on('open-notification', data => consoleView.emit('openNotification', data) );\neditorView.on('close-notification', data => consoleView.emit('closeNotification', data) );\neditorView.on('editor-changed', () => {\n\tif (models.project.getKey('exampleName')) projectView.emit('example-changed');\n});\neditorView.on('goto-docs', (word, id) => {\n\tif (tabView.getOpenTab() === 'tab-5' && word !== 'BelaContext'){\n\t\tdocumentationView.emit('open', id);\n\t} else {\n\t\t$('#iDocsLink')\n\t\t\t.addClass('iDocsVisible')\n\t\t\t.prop('title', 'cmd + h: '+word)\n\t\t\t.off('click').on('click', () => {\n\t\t\t\ttabView.emit('open-tab', 'tab-5');\n\t\t\t\tdocumentationView.emit('open', id);\n\t\t\t});\n\t}\n});\neditorView.on('clear-docs', () => $('#iDocsLink').removeClass('iDocsVisible').off('click') );\neditorView.on('highlight-syntax', (names) => socket.emit('highlight-syntax', names) );\neditorView.on('compare-files', compare => {\n\tcompareFiles = compare;\n\t// unset the interval\n\tif (!compare) setModifiedTimeInterval(undefined);\n});\n\n// toolbar view\nvar toolbarView = new (require('./Views/ToolbarView'))('toolBar', [models.project, models.error, models.status, models.settings]);\ntoolbarView.on('process-event', (event) => {\n\tvar data = {\n\t\tevent,\n\t\tcurrentProject\t: models.project.getKey('currentProject')\n\t};\n\t//data.timestamp = performance.now();\n\tif (event === 'stop') consoleView.emit('openProcessNotification', 'Stopping Bela...');\n\tsocket.emit('process-event', data);\n});\ntoolbarView.on('clear-console', () => consoleView.emit('clear', true) );\ntoolbarView.on('mode-switch-warning', num => consoleView.emit('warn', num+' mode switch'+(num!=1?'es':'')+' detected on the audio thread!') );\n\n// console view\nvar consoleView = new (require('./Views/ConsoleView'))('IDEconsole', [models.status, models.project, models.error, models.settings], models.settings);\nconsoleView.on('focus', (focus) =>  models.project.setKey('focus', focus) );\nconsoleView.on('open-file', (fileName, focus) => {\n\tvar data = {\n\t\tfunc: 'openFile',\n\t\tfileName, \n\t\tfocus, \n\t\tcurrentProject: models.project.getKey('currentProject')\n\t};\n\tsocket.emit('project-event', data);\n});\nconsoleView.on('input', value => socket.emit('sh-command', value) );\nconsoleView.on('tab', cmd => socket.emit('sh-tab', cmd) );\n\n// documentation view\nvar documentationView = new (require('./Views/DocumentationView'));\ndocumentationView.on('open-example', (example) => {\n\tif (projectView.exampleChanged){\n\t\tprojectView.exampleChanged = false;\n\t\tpopup.exampleChanged( () => {\n\t\t\tprojectView.emit('message', 'project-event', {\n\t\t\t\tfunc: 'openExample',\n\t\t\t\tcurrentProject: example\n\t\t\t});\n\t\t\t$('.selectedExample').removeClass('selectedExample');\n\t\t}, undefined, 0, () => projectView.exampleChanged = true );\n\t\treturn;\n\t}\n\t\t\n\tprojectView.emit('message', 'project-event', {\n\t\tfunc: 'openExample',\n\t\tcurrentProject: example\n\t});\n\t$('.selectedExample').removeClass('selectedExample');\n});\ndocumentationView.on('add-link', (link, type) => {\n\teditorView.emit('add-link', link, type);\n});\n\n// git view\nvar gitView = new (require('./Views/GitView'))('gitManager', [models.git]);\ngitView.on('git-event', data => {\n\tdata.currentProject = models.project.getKey('currentProject');\n\tdata.timestamp = performance.now();\n\tconsoleView.emit('openNotification', data);\n\tsocket.emit('git-event', data);\n});\ngitView.on('console', text => consoleView.emit('log', text, 'git') );\ngitView.on('console-warn', text => consoleView.emit('warn', text) );\n\n// refresh file list\nsetInterval( () => socket.emit('list-files', models.project.getKey('currentProject')), 5000);\n\n// setup socket\nvar socket = io('/IDE');\n\n// socket events\nsocket.on('report-error', (error) => consoleView.emit('warn', error.message || error) );\n\nsocket.on('init', (data) => {\n\t\n\tconsoleView.connect();\n\t\n\tvar timestamp = performance.now()\n\tsocket.emit('project-event', {func: 'openProject', currentProject: data[2].project, timestamp})\t\n\tconsoleView.emit('openNotification', {func: 'init', timestamp});\n\t\n\tmodels.project.setData({projectList: data[0], exampleList: data[1], currentProject: data[2].project});\n\tmodels.settings.setData(data[2]);\n\t\n\t$('#runOnBoot').val(data[3]);\n\t\n\tmodels.status.setData(data[4]);\n\t\n\t//models.project.print();\n\t//models.settings.print();\n\t\n\tsocket.emit('set-time', new Date().toString());\n\t\n\tdocumentationView.emit('init');\n\t\n\t// hack to stop changes to read-only example being overwritten when opening a new tab\n\tif (data[2].project === 'exampleTempProject') models.project.once('set', () => projectView.emit('example-changed') );\n\n\t// socket.io timeout\t\n\tsocket.io.engine.pingTimeout = 6000;\n\tsocket.io.engine.pingInterval = 3000;\n\t\n});\n\n// project events\nsocket.on('project-data', (data) => {\n\n\tconsoleView.emit('closeNotification', data);\n\tmodels.project.setData(data);\n\n\tif (data.gitData) models.git.setData(data.gitData);\n\tsetModifiedTimeInterval(data.mtime);\n\t//console.log(data);\n\t//models.settings.setData(data.settings);\n\t//models.project.print();\n});\nsocket.on('stop-reply', (data) => {\n\tconsoleView.emit('closeNotification', data);\n});\nsocket.on('project-list', (project, list) =>  {\n\t//console.log(project, list);\n\tif (project && list.indexOf(models.project.getKey('currentProject')) === -1){\n\t\t// this project has just been deleted\n\t\tconsole.log('project-list', 'openProject');\n\t\tsocket.emit('project-event', {func: 'openProject', currentProject: project});\n\t}\n\tmodels.project.setKey('projectList', list);\n});\nsocket.on('file-list', (project, list) => {\n\tif (project && project === models.project.getKey('currentProject')){\n\t\tmodels.project.setKey('fileList', list);\n\t}\n});\n\nsocket.on('status', (status, project) => {\n\tif (project === models.project.getKey('currentProject') || project === undefined){\n\t\tmodels.status.setData(status);\n\t\t//console.log('status', status);\n\t}\n});\n\nsocket.on('project-settings-data', (project, settings) => {\n\t// console.log('project-settings-data', settings);\n\tif (project === models.project.getKey('currentProject'))\n\t\tmodels.project.setData(settings);\n});\nsocket.on('IDE-settings-data', (settings) => models.settings.setData(settings) );\n\nsocket.on('cpu-usage', data => models.status.setKey('CPU', data) );\nsocket.on('mode-switch', data => models.status.setKey('msw', data) );\n\nsocket.on('disconnect', () => {\n\tconsoleView.disconnect();\n\ttoolbarView.emit('disconnected');\n\tmodels.project.setKey('readOnly', true);\n});\n\nsocket.on('file-changed', (project, fileName) => {\n\tif (project === models.project.getKey('currentProject') && fileName === models.project.getKey('fileName')){\n\t\tconsole.log('file changed!');\n\t\tmodels.project.setKey('readOnly', true);\n\t\tmodels.project.setKey('fileData', 'This file has been edited in another window. Reopen the file to continue');\n\t\t//socket.emit('project-event', {func: 'openFile', currentProject: project, fileName: fileName});\n\t}\n});\n\n// run-on-boot\nsocket.on('run-on-boot-log', text => consoleView.emit('log', text) );\n//socket.on('run-on-boot-project', project => setTimeout( () => $('#runOnBoot').val(project), 100) );\n\n// shell\nsocket.on('shell-event', (evt, data) => consoleView.emit('shell-'+evt, data) )\n\n// generic log and warn\nsocket.on('std-log', text => consoleView.emit('log', text) );\nsocket.on('std-warn', text => consoleView.emit('warn', text) );\n\nsocket.on('syntax-highlighted', () => editorView.emit('syntax-highlighted') );\n\nsocket.on('force-reload', () => setTimeout( () => window.location.reload(true), 1000));\nsocket.on('update-error', err => {\n\tpopup.overlay();\n\tconsoleView.emit('warn', 'Error updating the board, please try a different zip archive');\n});\n\nsocket.on('mtime', setModifiedTimeInterval);\nsocket.on('mtime-compare', data => {\n\tif (compareFiles && data.currentProject === models.project.getKey('currentProject') && data.fileName === models.project.getKey('fileName')){\n\t\t// console.log(data, data.fileData, editorView.getData());\n\t\tif (data.fileData !== editorView.getData())\n\t\t\tfileChangedPopup(data.fileName);\n\t}\n});\n\nvar checkModifiedTimeInterval;\nvar compareFiles = false;\nfunction setModifiedTimeInterval(mtime){\n\t// console.log('received mtime', mtime);\n\tif (checkModifiedTimeInterval) clearInterval(checkModifiedTimeInterval);\n\tif (!mtime || !compareFiles) return;\n\tcheckModifiedTimeInterval = setInterval(() => {\n\t\t// console.log('sent compare-mtime', mtime);\n\t\tsocket.emit('compare-mtime', {\n\t\t\tcurrentProject\t:\tmodels.project.getKey('currentProject'),\n\t\t\tfileName\t\t:\tmodels.project.getKey('fileName'),\n\t\t\tmtime\n\t\t});\n\t}, 5000);\n}\n\n// current file changed\nvar fileChangedPopupVisible = false;\nfunction fileChangedPopup(fileName){\n\t\n\tif (fileChangedPopupVisible) return;\n\t\n\tpopup.title('File Changed on Disk');\n\tpopup.subtitle('Would you like to reload '+fileName+'?');\n\t\n\tvar form = [];\n\tform.push('<button type=\"submit\" class=\"button popup-save\">Reload from Disk</button>');\n\tform.push('<button type=\"button\" class=\"button popup-cancel\">Keep Current</button>');\n\t\n\tpopup.form.append(form.join('')).off('submit').on('submit', e => {\n\t\tfileChangedPopupVisible = false;\n\t\te.preventDefault();\n\t\tvar data = {\n\t\t\tfunc\t\t\t: 'openProject', \n\t\t\tcurrentProject\t: models.project.getKey('currentProject'),\n\t\t\ttimestamp\t\t: performance.now()\n\t\t};\n\t\tsocket.emit('project-event', data);\n\t\tconsoleView.emit('openNotification', data);\n\t\tpopup.hide();\n\t});\n\t\n\tpopup.find('.popup-cancel').on('click', () => {\n\t\tpopup.hide();\n\t\tfileChangedPopupVisible = false;\n\t\teditorView.emit('upload', editorView.getData());\n\t});\n\t\n\tpopup.show();\n\tfileChangedPopupVisible = true;\n}\n\n// model events\n// build errors\nmodels.status.on('set', (data, changedKeys) => {\n\tif (changedKeys.indexOf('syntaxError') !== -1){\n\t\tparseErrors(data.syntaxError);\n\t}\n});\n\n// top-bar\nmodels.project.on('change', (data, changedKeys) => {\n\n\tvar projectName = data.exampleName ? data.exampleName+' (example)' : data.currentProject;\n\n\t// set the browser tab title\n\t$('title').html((data.fileName ? data.fileName+', ' : '')+projectName);\n\t\n\t// set the top-line stuff\n\t$('#top-open-project').html(projectName ? 'Project: '+projectName : '');\n\t$('#top-open-file').html(data.fileName ? 'File: '+data.fileName : '');\n\t\n\tif (data.exampleName){\n\t\t$('#top-example-docs').css('visibility', 'visible');\n\t\t$('#top-example-docs-link').prop('href', 'documentation/'+data.exampleName+'_2render_8cpp-example.html');\n\t} else {\n\t\t$('#top-example-docs').css('visibility', 'hidden');\t\n\t}\n\n});\nmodels.status.on('change', (data, changedKeys) => {\n\tif (changedKeys.indexOf('running') !== -1 || changedKeys.indexOf('building') !== -1){\n\t\tif (data.running)\n\t\t\t$('#top-bela-status').html('Running: '+data.runProject);\n\t\telse if (data.building)\n\t\t\t$('#top-bela-status').html('Building: '+data.buildProject);\n\t\telse\n\t\t\t$('#top-bela-status').html('');\n\t}\n});\n\n\n// history\n{\n\tlet lastState = {}, poppingState = true;\n\t\n\t// file / project changed\n\tmodels.project.on('change', (data, changedKeys) => {\n\t\tif (changedKeys.indexOf('currentProject') !== -1 || changedKeys.indexOf('fileName') !== -1){\n\t\t\tvar state = {file: data.fileName, project: data.currentProject};\n\t\t\tif (state.project !== lastState.project || state.file !== lastState.file){\n\t\t\t\t\n\t\t\t\tif (!poppingState){\n\t\t\t\t\t//console.log('push', state);\n\t\t\t\t\thistory.pushState(state, null, null);\n\t\t\t\t}\n\t\t\t\tpoppingState = false\n\t\t\t\tlastState = state;\n\t\t\t}\n\t\t}\n\t});\n\n\t// load previously open file / project when browser's back button is clicked\n\twindow.addEventListener('popstate', function(e) {\n\t\tif (e.state){\n\t\t\tconsole.log('opening project '+e.state.project+' file '+e.state.file);\n\t\t\tvar data = {\n\t\t\t\tcurrentProject\t: e.state.project,\n\t\t\t\tnewFile \t\t: e.state.file,\n\t\t\t\tfunc\t\t\t: 'openProject',\n\t\t\t\ttimestamp \t\t: performance.now()\n\t\t\t};\n\t\t\tconsoleView.emit('openNotification', data);\n\t\t\tsocket.emit('project-event', data);\n\t\t\tpoppingState = true;\n\t\t}\n\t});\n}\n\n// local functions\n// parse errors from g++\nfunction parseErrors(data){\n//console.log('parsing', data, data.split('\\n'));\n\tdata = data.split('\\n');\n\t\n\tvar errors = [];\n\tfor (let i=0; i<data.length; i++){\n\n\t\t// ignore errors which begin with 'make'\n\t\tif (data[i].length > 1 && data[i].slice(0,4) !== 'make'){\n\t\n\t\t\tvar msg = data[i].split('\\n');\n\t\t\n\t\t\tfor (let j=0; j<msg.length; j++){\n\t\t\n\t\t\t\tvar str = msg[j].split(':');\n\t\t\t\t// console.log(str);\n\t\t\t\t// str[0] -> file name + path\n\t\t\t\t// str[1] -> row number\n\t\t\t\t// str[2] -> column number\n\t\t\t\t// str[3] -> type of error\n\t\t\t\t// str[4+] > error message\n\t\t\t\n\t\t\t\tif (str[3] === ' error'){\n\t\t\t\t\terrors.push({\n\t\t\t\t\t\tfile: str[0].split('/').pop(),\n\t\t\t\t\t\trow: str[1]-1,\n\t\t\t\t\t\tcolumn: str[2],\n\t\t\t\t\t\ttext: str.slice(4).join(':').slice(1) + '\\ncolumn: '+str[2],\n\t\t\t\t\t\ttype: \"error\"\n\t\t\t\t\t});\n\t\t\t\t} else if (str[3] == ' fatal error'){\n\t\t\t\t\terrors.push({\n\t\t\t\t\t\tfile: str[0].split('/').pop(),\n\t\t\t\t\t\trow: str[1]-1,\n\t\t\t\t\t\tcolumn: str[2],\n\t\t\t\t\t\ttext: str.slice(4).join(':').slice(1) + '\\ncolumn: '+str[2],\n\t\t\t\t\t\ttype: \"error\"\n\t\t\t\t\t});\n\t\t\t\t} else if (str[3] == ' warning'){\n\t\t\t\t\terrors.push({\n\t\t\t\t\t\tfile: str[0].split('/').pop(),\n\t\t\t\t\t\trow: str[1]-1,\n\t\t\t\t\t\tcolumn: str[2],\n\t\t\t\t\t\ttext: '[warning] '+str.slice(4).join(':').slice(1) + '\\ncolumn: '+str[2],\n\t\t\t\t\t\ttype: \"warning\"\n\t\t\t\t\t});\n\t\t\t\t} else if (str[0] == 'pasm'){\n\t\t\t\t\terrors.push({\n\t\t\t\t\t\tfile: str[1].split(' ')[1].split('(')[0], \n\t\t\t\t\t\trow: parseInt(str[1].split(' ')[1].split('(')[1].split(')')[0])-1,\n\t\t\t\t\t\tcolumn: '',\n\t\t\t\t\t\ttext: '[pasm] '+str[2].substring(1),\n\t\t\t\t\t\ttype: \"error\"\n\t\t\t\t\t});\n\t\t\t\t} else {\n\t\t\t\t\t//console.log('rejected error string: '+str);\n\t\t\t\t\tif (str[2] && str[2].indexOf('linker') !== -1){\n\t\t\t\t\t\tconsole.log('linker error');\n\t\t\t\t\t\tconsoleView.emit('warn', 'linker error detected, set verbose build output in settings for details');\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\t// if no gcc errors have been parsed correctly, but make still thinks there is an error\n\t// error will contain string 'make: *** [<path>] Error 1'\n\tif (!errors.length && (data.indexOf('make: *** ') !== -1) && (data.indexOf('Error 1') !== -1)){\n\t\terrors.push({\n\t\t\ttext: data,\n\t\t\ttype: 'error'\n\t\t});\n\t}\n\t\n\tvar currentFileErrors = [], otherFileErrors = [];\n\tfor (let err of errors){\n\t\tif (!err.file || err.file === models.project.getKey('fileName')){\n\t\t\terr.currentFile = true;\n\t\t\tcurrentFileErrors.push(err);\n\t\t} else {\n\t\t\terr.currentFile = false;\n\t\t\terr.text = 'In file '+err.file+': '+err.text;\n\t\t\totherFileErrors.push(err);\n\t\t}\n\t}\n\t\n\tmodels.error.setKey('allErrors', errors);\n\tmodels.error.setKey('currentFileErrors', currentFileErrors);\n\tmodels.error.setKey('otherFileErrors', otherFileErrors);\n\t\n\tmodels.error.setKey('verboseSyntaxError', data);\n\n}\n\n// hotkeys\nvar keypress = new window.keypress.Listener();\n\nkeypress.simple_combo(\"meta s\", function(){ toolbarView.emit('process-event', 'run') });\nkeypress.simple_combo(\"meta o\", function(){ tabView.emit('toggle') });\nkeypress.simple_combo(\"meta k\", function(){ consoleView.emit('clear') });\nkeypress.simple_combo(\"meta h\", function(){ $('#iDocsLink').trigger('click') });","var EventEmitter = require('events').EventEmitter;\n\nclass Model extends EventEmitter{\n\n\tconstructor(data){\n\t\tsuper();\n\t\tvar _data = data || {};\n\t\tthis._getData = () => _data;\n\t}\n\t\n\tgetKey(key){\n\t\treturn this._getData()[key];\n\t}\n\t\n\tsetData(newData){\n\t\tif (!newData) return;\n\t\tvar newKeys = [];\n\t\tfor (let key in newData){\n\t\t\tif (!_equals(newData[key], this._getData()[key], false)){\n\t\t\t\tnewKeys.push(key);\n\t\t\t\tthis._getData()[key] = newData[key];\n\t\t\t}\n\t\t}\n\t\tif (newKeys.length) {\n\t\t\t//console.log('changed setdata');\n\t\t\tthis.emit('change', this._getData(), newKeys);\n\t\t}\n\t\tthis.emit('set', this._getData(), Object.keys(newData));\n\t}\n\t\n\tsetKey(key, value){\n\t\tif (!_equals(value, this._getData()[key], false)){\n\t\t\tthis._getData()[key] = value;\n\t\t\t//console.log('changed setkey');\n\t\t\tthis.emit('change', this._getData(), [key]);\n\t\t}\n\t\tthis.emit('set', this._getData(), [key]);\n\t}\n\t\n\tpushIntoKey(key, value){\n\t\tthis._getData()[key].push(value);\n\t\tthis.emit('change', this._getData(), [key]);\n\t\tthis.emit('set', this._getData(), [key]);\n\t}\n\t\n\tspliceFromKey(key, index){\n\t\tthis._getData()[key].splice(index, 1);\n\t\tthis.emit('change', this._getData(), [key]);\n\t\tthis.emit('set', this._getData(), [key]);\n\t}\n\t\n\tprint(){\n\t\tconsole.log(this._getData());\n\t}\n\t\n}\n\nmodule.exports = Model;\n\nfunction _equals(a, b, log){\n\tif (log) console.log('a:', a, 'b:', b);\n\tif (a instanceof Array && b instanceof Array){\n\t\tif (log) console.log('arrays', 'a:', a, 'b:', b, (a.length === b.length), a.every( function(element, index){ return _equals(element, b[index], log) }));\n\t\treturn ( (a.length === b.length) && a.every( function(element, index){ return _equals(element, b[index], log) }) );\n\t} else if (a instanceof Object && b instanceof Object){\n\t\tif (log) console.log('objects', 'a:', a, 'b:', b);\n\t\tfor (let c in a){ \n\t\t\tif (log) console.log('a[c]:', a[c], 'b[c]:', b[c], 'c:', c);\n\t\t\tif (!_equals(a[c], b[c], log)) return false;\n\t\t}\n\t\treturn true;\n\t} else {\n\t\tif (log) console.log('a:', a, 'b:', b, Object.is(a, b), (a === b));\n\t\treturn Object.is(a, b);\n\t}\n}\n\t\n\t\n\t\n\t\n\t\n\t\n\t","'use strict';\nvar View = require('./View');\nvar _console = require('../console');\n\nvar shellCWD = '~';\n\nvar modeSwitches;\n\nclass ConsoleView extends View{\n\n\tconstructor(className, models, settings){\n\t\tsuper(className, models, settings);\t\t\n\t\t\n\t\tthis.on('clear', force => _console.clear(undefined, force) );\n\t\t_console.on('focus', (focus) => this.emit('focus', focus) );\n\t\t_console.on('open-file', (fileName, focus) => this.emit('open-file', fileName, focus) );\n\t\t\n\t\tthis.on('openNotification', this.openNotification);\n\t\tthis.on('closeNotification', this.closeNotification);\n\t\tthis.on('openProcessNotification', this.openProcessNotification);\n\n\t\tthis.on('log', (text, css) => _console.log(text, css));\n\t\tthis.on('warn', function(warning, id){\n\t\t\tconsole.log(warning);\n\t\t\t_console.warn(warning, id);\n\t\t});\n\t\t\n\t\tthis.form = document.getElementById('beaglert-consoleForm');\n\t\tthis.input = document.getElementById('beaglert-consoleInput');\n\t\t\n\t\t// console command line input events\n\t\tthis.history = [];\n\t\tthis.historyIndex = 0;\n\t\tthis.inputFocused = false;\n\t\t\n\t\tthis.form.addEventListener('submit', (e) => {\n\t\t\te.preventDefault();\n\t\t\t\n\t\t\tthis.history.push(this.input.value);\n\t\t\tthis.historyIndex = 0;\n\t\t\n\t\t\tthis.emit('input', this.input.value);\n\t\t\t_console.log(shellCWD+' '+this.input.value, 'log-in');\n\t\t\tthis.input.value = '';\n\t\t});\n\t\t\n\t\t$('#beaglert-consoleInput-pre')\n\t\t\t.on('click', () => $(this.input).trigger('focus') );\n\t\t\n\t\t$('#beaglert-consoleInput-pre, #beaglert-consoleInput')\n\t\t\t.on('mouseover', function(){ $('#beaglert-consoleInput-pre').css('opacity', 1) })\n\t\t\t.on('mouseout', () => { if (!this.inputFocused) $('#beaglert-consoleInput-pre').css('opacity', 0.2) });\n\t\t\n\t\tthis.input.addEventListener('focus', () => {\n\t\t\tthis.inputFocused = true;\n\t\t\t$('#beaglert-consoleInput-pre').css('opacity', 1);//.html(shellCWD);\n\t\t});\n\t\tthis.input.addEventListener('blur', () => {\n\t\t\tthis.inputFocused = false;\n\t\t\t$('#beaglert-consoleInput-pre').css('opacity', 0.2);//.html('>');\n\t\t});\n\t\twindow.addEventListener('keydown', (e) => {\n\t\t\tif (this.inputFocused){\n\t\t\t\tif (e.which === 38){\t// up arrow\n\t\t\t\t\n\t\t\t\t\tif (this.history[this.history.length - ++this.historyIndex]){\n\t\t\t\t\t\tthis.input.value = this.history[this.history.length - this.historyIndex];\n\t\t\t\t\t} else {\n\t\t\t\t\t\tthis.historyIndex -= 1;\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t\t// force the cursor to the end\n\t\t\t\t\tsetTimeout( () => {\n\t\t\t\t\t\tif(this.input.setSelectionRange !== undefined) {\n\t\t\t\t\t\t\tthis.input.setSelectionRange(this.input.value.length, this.input.value.length);\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t$(this.input).val(this.input.value);\n\t\t\t\t\t\t}\n\t\t\t\t\t}, 0);\n\t\t\t\t\t\n\t\t\t\t} else if (e.which === 40){\t\t// down arrow\n\t\t\t\t\tif (--this.historyIndex === 0){\n\t\t\t\t\t\tthis.input.value = '';\n\t\t\t\t\t} else if (this.history[this.history.length - this.historyIndex]){\n\t\t\t\t\t\tthis.input.value = this.history[this.history.length - this.historyIndex];\n\t\t\t\t\t} else {\n\t\t\t\t\t\tthis.historyIndex += 1;\n\t\t\t\t\t}\t\n\t\t\t\t} else if (e.which === 9){\t// tab\n\t\t\t\t\te.preventDefault();\n\t\t\t\t\tthis.emit('tab', this.input.value);\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\t\t\n\t\t$('#beaglert-console').on('click', () => $(this.input).trigger('focus') );\n\t\t$('#beaglert-consoleWrapper').on('click', (e) => e.stopPropagation() );\n\t\t\n\t\tthis.on('shell-stdout', data => this.emit('log', data, 'shell') );\n\t\tthis.on('shell-stderr', data => this.emit('warn', data) );\n\t\tthis.on('shell-cwd', cwd => {\n\t\t\t//console.log('cwd', cwd);\n\t\t\tshellCWD = 'root@bela ' + cwd.replace('/root', '~') + '#';\n\t\t\t$('#beaglert-consoleInput-pre').html(shellCWD);\n\t\t});\n\t\tthis.on('shell-tabcomplete', data => $('#beaglert-consoleInput').val(data) );\n\t}\n\t\n\topenNotification(data){\n\t\t//if (!funcKey[data.func]) console.log(data.func);\n\t\tif (data.func === 'command'){\n\t\t\tvar output = 'Executing git ' + (data.command || '');\n\t\t} else if (data.func === 'editor'){\n\t\t\tvar output = data.text;\n\t\t} else {\n\t\t\tvar output = funcKey[data.func];\n\t\t\tif (data.newProject || data.currentProject) output += ' '+(data.newProject || data.currentProject);\n\t\t\tif (data.newFile || data.fileName) output += ' '+(data.newFile || data.fileName);\n\t\t}\n\t\t_console.notify(output+'...', data.timestamp);\n\t}\n\tcloseNotification(data){\n\t\tif (data.error){\n\t\t\t_console.reject(' '+data.error, data.timestamp);\n\t\t} else {\n\t\t\t_console.fulfill(' done', data.timestamp);\n\t\t}\n\t}\n\t\n\topenProcessNotification(text){\n\t\tvar timestamp = performance.now();\n\t\t_console.notify(text, timestamp);\n\t\t_console.fulfill('', timestamp, false);\n\t}\n\t\n\tconnect(){\n\t\t$('#console-disconnect').remove();\n\t\t_console.unblock();\n\t}\n\tdisconnect(){\n\t\tconsole.log('disconnected');\n\t\t_console.warn('You have been disconnected from the Bela IDE and any more changes you make will not be saved. Please check your USB connection and reboot your BeagleBone', 'console-disconnect');\n\t\t_console.block();\n\t}\n\t\n\t// model events\n\t// syntax\n\t_syntaxLog(log, data){\n\t\tif (this.settings.fullSyntaxCheckOutput){\n\t\t\t_console.log(log);\n\t\t}\n\t}\n\t__verboseSyntaxError(log, data){\n\t\tif (parseInt(this.settings.getKey('verboseErrors'))){\n\t\t\tfor (let line of log){\n\t\t\t\t_console.log(line.split(' ').join('&nbsp;'), 'make');\n\t\t\t}\n\t\t}\n\t}\n\t__allErrors(errors, data){\n\t//console.log(data);\n\t\t_console.newErrors(errors);\n\t}\n\t\n\t// build\n\t_buildLog(log, data){\n\t//console.log(log, data);\n\t\t//if (this.settings.fullBuildOutput){\n\t\t\t_console.log(log, 'make');\n\t\t//}\n\t}\n\t\n\t// bela\n\t__belaLog(log, data){\n\t\t_console.log(log, 'bela');\n\t}\n\t__belaLogErr(log, data){\n\t\t_console.warn(log);\n\t\t//_console.warn(log.split(' ').join('&nbsp;'));\n\t}\n\t__belaResult(data){\n\t\t//if (data.stderr && data.stderr.split) _console.warn(data.stderr.split(' ').join('&nbsp;'));\n\t\t//if (data.signal) _console.warn(data.signal);\n\t\t//console.log(data.signal)\n\t}\n\t\n\t_building(status, data){\n\t\tvar timestamp = performance.now();\n\t\tif (status){\n\t\t\t_console.notify('Building project...', timestamp, true);\n\t\t\t_console.fulfill('', timestamp, true);\n\t\t} else {\n\t\t\t_console.notify('Build finished', timestamp, true);\n\t\t\t_console.fulfill('', timestamp, true);\n\t\t}\n\t}\n\t_running(status, data){\n\t\tvar timestamp = performance.now();\n\t\tif (status){\n\t\t\t_console.notify('Running project...', timestamp, true);\n\t\t\t_console.fulfill('', timestamp, true);\n\t\t} else {\n\t\t\t_console.notify('Bela stopped', timestamp, true);\n\t\t\t/*if (data && data.belaResult && data.belaResult.signal && data.belaResult.signal !== 'undefined'){\n\t\t\t\t_console.reject(' with signal '+data.belaResult.signal, timestamp, true);\n\t\t\t} else {*/\n\t\t\t\t_console.fulfill('', timestamp, true);\n\t\t\t//}\n\t\t}\n\t}\n\t\n\t_CPU(data){\n\t\tif (parseInt(this.settings.getKey('cpuMonitoringVerbose')) && data.bela && data.bela.split){\n\t\t\t_console.log(data.bela.split(' ').join('&nbsp;'));\n\t\t}\n\t\t/*if (data.modeSwitches && modeSwitches) {\n\t\t\tlet ms = parseInt(data.modeSwitches);\n\t\t\tif (ms > modeSwitches && ms !== 67117 && ms > 2) _console.warn(ms+' mode switches detected on audio thread!');\n\t\t\tmodeSwitches = ms;\n\t\t\t//console.log(data.modeSwitches, modeSwitches);\n\t\t} else {\n\t\t\tmodeSwitches = data.modeSwitches ? parseInt(data.modeSwitches) : data.modeSwitches;\n\t\t}*/\n\t}\n\t\n\t_consoleDelete(value){\n\t\t_console.setConsoleDelete(parseInt(value));\n\t}\n\t\n}\n\nmodule.exports = ConsoleView;\n\nvar funcKey = {\n\t'openProject'\t: 'Opening project',\n\t'openExample'\t: 'Opening example',\n\t'newProject'\t: 'Creating project',\n\t'saveAs'\t\t: 'Saving project',\n\t'deleteProject'\t: 'Deleting project',\n\t'cleanProject'\t: 'Cleaning project',\n\t'openFile'\t\t: 'Opening file',\n\t'newFile'\t\t: 'Creating file',\n\t'uploadFile'\t: 'Uploading file',\n\t'renameFile'\t: 'Renaming file',\n\t'deleteFile'\t: 'Deleting file',\n\t'init'\t\t\t: 'Initialising',\n\t'stop'\t\t\t: 'Stopping',\n\t'fileRejected'\t: 'Uploading file'\n};","var View = require('./View');\n\nvar apiFuncs = ['setup', 'render', 'cleanup', 'Bela_createAuxiliaryTask', 'Bela_scheduleAuxiliaryTask'];\n\nvar classes = [\n\t'Scope',\n\t'OSCServer',\n\t'OSCClient',\n\t'OSCMessageFactory',\n\t'UdpServer',\n\t'UdpClient',\n\t'Midi',\n\t'MidiParser',\n\t'WriteFile'\n];\n\nclass DocumentationView extends View {\n\t\n\tconstructor(className, models){\n\t\tsuper(className, models);\n\t\t\n\t\tthis.on('init', this.init);\n\t\t\n\t\tthis.on('open', (id) => {\n\t\t\tthis.closeAll();\n\t\t\t$('#'+id).prop('checked', 'checked');\n\t\t\t$('#'+id).parent().parent().siblings('input').prop('checked', 'checked');\n\t\t\tvar offset = $('#'+id).siblings('label').position().top + $('#docTab').scrollTop();\n\t\t\tif (offset) $('#docTab').scrollTop(offset);\n\t\t})\n\t}\n\t\n\tinit(){\n\t\n\t\tvar self = this;\n\t\t\n\t\t// The API\n\t\t$.ajax({\n\t\t\ttype: \"GET\",\n\t\t\turl: \"documentation_xml?file=Bela_8h\",\n\t\t\tdataType: \"html\",\n\t\t\tsuccess: function(xml){\n\t\t\t\t//console.log(xml);\n\t\t\t\tvar counter = 0;\n\t\t\t\tfor (let item of apiFuncs){\n\t\t\t\t\tvar li = createlifrommemberdef($(xml).find('memberdef:has(name:contains('+item+'))'), 'APIDocs'+counter, self, 'api');\n\t\t\t\t\tli.appendTo($('#APIDocs'));\n\t\t\t\t\tcounter += 1;\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\t\t\n\t\t// The Audio Context\n\t\t$.ajax({\n\t\t\ttype: \"GET\",\n\t\t\turl: \"documentation_xml?file=structBelaContext\",\n\t\t\tdataType: \"html\",\n\t\t\tsuccess: function(xml){\n\t\t\t\t//console.log(xml);\n\t\t\t\tvar counter = 0;\n\t\t\t\tcreatelifromxml($(xml), 'contextDocs'+counter, 'structBelaContext', self, 'contextType').appendTo($('#contextDocs'));\n\t\t\t\tcounter += 1;\n\t\t\t\t$(xml).find('memberdef').each(function(){\n\t\t\t\t\tvar li = createlifrommemberdef($(this), 'contextDocs'+counter, self, 'context');\n\t\t\t\t\tli.appendTo($('#contextDocs'));\n\t\t\t\t\tcounter += 1;\n\t\t\t\t});\n\t\t\t}\n\t\t});\n\t\t\n\t\t// Utilities\n\t\t$.ajax({\n\t\t\ttype: \"GET\",\n\t\t\turl: \"documentation_xml?file=Utilities_8h\",\n\t\t\tdataType: \"html\",\n\t\t\tsuccess: function(xml){\n\t\t\t\t//console.log(xml);\n\t\t\t\tvar counter = 0;\n\t\t\t\tcreatelifromxml($(xml), 'utilityDocs'+counter, 'Utilities_8h', self, 'header').appendTo($('#utilityDocs'));\n\t\t\t\tcounter += 1;\n\t\t\t\t$(xml).find('memberdef').each(function(){\n\t\t\t\t\tvar li = createlifrommemberdef($(this), 'utilityDocs'+counter, self, 'utility');\n\t\t\t\t\tli.appendTo($('#utilityDocs'));\n\t\t\t\t\tcounter += 1;\n\t\t\t\t});\n\t\t\t}\n\t\t});\n\t\t\n\t\t// all classes\n\t\tfor (let item of classes){\n\t\t\txmlClassDocs(item, this);\n\t\t}\n\t\t\n\t}\n\t\n\tcloseAll(){\n\t\t$('#docsParent').find('input:checked').prop('checked', '');\n\t}\n\t\n}\n\nmodule.exports = DocumentationView;\n\nfunction createlifrommemberdef($xml, id, emitter, type){\n\n\tvar name = $xml.find('name').html();\n\temitter.emit('add-link', {name, id}, type);\n\t\n\tvar li = $('<li></li>');\n\tli.append($('<input></input>').prop('type', 'checkbox').addClass('docs').prop('id', id));\n\tli.append($('<label></label>').prop('for', id).addClass('docSectionHeader').addClass('sub').html(name));\n\t\n\tvar content = $('<div></div>');\n\t\n\t// title\n\tcontent.append($('<h2></h2>').html( $xml.find('definition').html() + $xml.find('argsstring').html() ));\n\t\n\t// subtitle\n\tcontent.append($('<h3></h3>').html( $xml.find('briefdescription > para').html() || '' ));\n\t\n\t// main text\n\t$xml.find('detaileddescription > para').each(function(){\n\t\tif ($(this).find('parameterlist').length){\n\t\t\tcontent.append('</br><h3>Parameters:</h3>');\n\t\t\tvar ul = $('<ul></ul>');\n\t\t\t$(this).find('parameteritem').each(function(){\n\t\t\t\tvar li = $('<li></li>');\n\t\t\t\tli.append($('<strong></strong>').html( $(this).find('parametername').html()+': ' ));\n\t\t\t\t$(this).find('parameterdescription>para').each(function(){\n\t\t\t\t\tli.append($('<span></span>').html( $(this).html() || '' ));\n\t\t\t\t});\n\t\t\t\tul.append(li);\n\t\t\t});\n\t\t\tcontent.append(ul);\n\t\t} else {\n\t\t\tcontent.append($('<p></p>').html( $(this).html() || '' ));\n\t\t}\n\t});\n\n\tli.append(content);\n\treturn li;\n}\n\nfunction createlifromxml($xml, id, filename, emitter, type){\n\n\tvar name = $xml.find('compoundname').html();\n\temitter.emit('add-link', {name, id}, type);\n\t\n\tvar li = $('<li></li>');\n\tli.append($('<input></input>').prop('type', 'checkbox').addClass('docs').prop('id', id));\n\tli.append($('<label></label>').prop('for', id).addClass('docSectionHeader').addClass('sub').html(name));\n\t\n\tvar content = $('<div></div>');\n\t\n\t// title\n\t//content.append($('<h2></h2>').html( $xml.find('definition').html() + $xml.find('argsstring').html() ));\n\t\n\t// subtitle\n\tcontent.append($('<h3></h3>').html( $xml.find('compounddef > briefdescription > para').html() || '' ));\n\t\n\t// main text\n\t$xml.find('compounddef > detaileddescription > para').each(function(){\n\t\tif ($(this).find('parameterlist').length){\n\t\t\tcontent.append('</br><h3>Parameters:</h3>');\n\t\t\tvar ul = $('<ul></ul>');\n\t\t\t$(this).find('parameteritem').each(function(){\n\t\t\t\tvar li = $('<li></li>');\n\t\t\t\tli.append($('<strong></strong>').html( $(this).find('parametername').html()+': ' ));\n\t\t\t\t$(this).find('parameterdescription>para').each(function(){\n\t\t\t\t\tli.append($('<span></span>').html( $(this).html() || '' ));\n\t\t\t\t});\n\t\t\t\tul.append(li);\n\t\t\t});\n\t\t\tcontent.append(ul);\n\t\t} else {\n\t\t\tcontent.append($('<p></p>').html( $(this).html() || '' ));\n\t\t}\n\t});\n\t\n\tcontent.append('</br><a href=\"documentation/'+filename+'.html\" target=\"_blank\">Full Documentation</a>');\n\n\tli.append(content);\n\treturn li;\n}\n\nfunction xmlClassDocs(classname, emitter){\n\tvar filename = 'class' + classname;\n\tvar parent = $('#'+classname+'Docs');\n\t$.ajax({\n\t\ttype: \"GET\",\n\t\turl: \"documentation_xml?file=\"+filename,\n\t\tdataType: \"html\",\n\t\tsuccess: function(xml){\n\t\t\t//console.log(xml);\n\t\t\t\n\t\t\tvar counter = 0;\n\t\t\tcreatelifromxml($(xml), classname+counter, filename, emitter, 'typedef').appendTo(parent);\n\t\t\temitter.emit('add-link', {name: classname, id: classname+counter}, 'header');\n\t\t\t\n\t\t\tcounter += 1;\n\t\t\t$(xml).find('[kind=\"public-func\"]>memberdef:not(:has(name:contains('+classname+')))').each(function(){\n\t\t\t\t//console.log($(this));\n\t\t\t\tvar li = createlifrommemberdef($(this), classname+counter, emitter, classname);\n\t\t\t\tli.appendTo(parent);\n\t\t\t\tcounter += 1;\n\t\t\t});\n\t\t\t\n\t\t\t// when tab is opened\n\t\t\tparent.siblings('input').on('change', function(){\n\t\t\t\tconsole.log(classname);\n\t\t\t});\n\n\t\t\t$.ajax({\n\t\t\t\ttype: \"GET\",\n\t\t\t\turl: \"documentation_xml?file=\"+classname+\"_8h\",\n\t\t\t\tdataType: \"html\",\n\t\t\t\tsuccess: function(xml){\n\t\t\t\t\t//console.log(xml);\n\t\t\t\t\tvar includes = $(xml).find('includedby');\n\t\t\t\t\tif (includes.length){\n\t\t\t\t\t\tvar content = $('#'+classname+'0').siblings('div');\n\t\t\t\t\t\tcontent.append($('<p></p>').html('Examples featuring this class:'));\n\t\t\t\t\t\tincludes.each(function(){\n\t\t\t\t\t\t\tvar include = $(this).html();\n\t\t\t\t\t\t\tif (include && include.split && include.split('/')[0] === 'examples'){\n\t\t\t\t\t\t\t\tvar link = $('<a></a>').html(include.split('/')[2]);\n\t\t\t\t\t\t\t\tlink.on('click', () => emitter.emit('open-example', [include.split('/')[1], include.split('/')[2]].join('/')));\n\t\t\t\t\t\t\t\tcontent.append(link).append('</br>');\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\t});\n}\n","var View = require('./View');\nvar Range = ace.require('ace/range').Range;\n\nconst uploadDelay = 50;\n\nvar uploadBlocked = false;\nvar currentFile;\nvar imageUrl;\nvar activeWords = [];\nvar activeWordIDs = [];\n\nclass EditorView extends View {\n\t\n\tconstructor(className, models){\n\t\tsuper(className, models);\n\t\t\n\t\tthis.highlights = {};\n\t\t\t\t\n\t\tthis.editor = ace.edit('editor');\n\t\tvar langTools = ace.require(\"ace/ext/language_tools\");\n\t\t\n\t\tthis.parser = require('../parser');\n\t\tthis.parser.init(this.editor, langTools);\n\t\tthis.parser.enable(true);\n\t\t\n\t\t// set syntax mode\n\t\tthis.on('syntax-highlighted', () => this.editor.session.setMode({ path: \"ace/mode/c_cpp\", v: Date.now() }));\n\t\tthis.editor.session.setMode('ace/mode/c_cpp');\n\t\tthis.editor.$blockScrolling = Infinity;\n\t\t\n\t\t// set theme\n\t\tthis.editor.setTheme(\"ace/theme/chrome\");\n\t\tthis.editor.setShowPrintMargin(false);\n\t\t\n\t\t// autocomplete settings\n\t\tthis.editor.setOptions({\n\t\t\tenableBasicAutocompletion: true,\n\t\t\tenableLiveAutocompletion: false,\n\t\t\tenableSnippets: true\n\t\t});\n\t\t\n\t\t// use hard tabs, not spaces\n\t\tthis.editor.session.setOption('useSoftTabs', false);\n\t\t\n\t\t// this function is called when the user modifies the editor\n\t\tthis.editor.session.on('change', (e) => {\n\t\t\t//console.log('upload', !uploadBlocked);\n\t\t\tif (!uploadBlocked){\n\t\t\t\tthis.editorChanged();\n\t\t\t\tthis.editor.session.bgTokenizer.fireUpdateEvent(0, this.editor.session.getLength());\n\t\t\t\t// console.log('firing tokenizer');\n\t\t\t}\n\t\t});\n\t\t\n\t\t// fired when the cursor changes position\n\t\tthis.editor.session.selection.on('changeCursor', () => {\n\t\t\tthis.getCurrentWord();\n\t\t});\n\t\t\n\t\t/*this.editor.session.on('changeBackMarker', (e) => {\n\t\t\tconsole.log($('.bela-ace-highlight'));\n\t\t\t$('.bela-ace-highlight').on('click', (e) => {\n\t\t\t\tconsole.log('click');\n\t\t\t\tthis.getCurrentWord();\n\t\t\t});\n\t\t});*/\n\n\t\t$('#audioControl').find('button').on('click', () => audioSource.start(0) );\n\t\t\n\t\tthis.on('resize', () => this.editor.resize() );\n\t\t\n\t\tthis.on('add-link', (link, type) => {\n\n\t\t\tif (!this.highlights[type] || !this.highlights[type].length)\n\t\t\t\tthis.highlights[type] = [];\n\t\t\t\t\n\t\t\tthis.highlights[type].push(link);\n\t\t\t\n\t\t\t/*if (activeWords.indexOf(name) == -1){\n\t\t\t\tactiveWords.push(name);\n\t\t\t\tactiveWordIDs.push(id);\n\t\t\t}*/\n\t\t\tif (this.linkTimeout) clearTimeout(this.linkTimeout);\n\t\t\tthis.linkTimeout = setTimeout(() => this.parser.highlights(this.highlights) )//this.emit('highlight-syntax', activeWords), 100);\n\t\t});\n\t\t\t\t\n\t\tthis.editor.session.on('tokenizerUpdate', (e) => {\n\t\t\t// console.log('tokenizerUpdate'); \n\t\t\tthis.parser.parse( () => {\n\t\t\t\tthis.getCurrentWord();\n\t\t\t});\n\t\t});\n\t\t\t\t\n\t}\n\t\n\teditorChanged(){\n\t\tthis.emit('editor-changed');\n\t\tclearTimeout(this.uploadTimeout);\n\t\tthis.uploadTimeout = setTimeout( () => this.emit('upload', this.editor.getValue()), uploadDelay );\n\t}\n\t\n\t// model events\n\t// new file saved\n\t__fileData(data, opts){\n\n\t\t// hide the pd patch and image displays if present, and the editor\n\t\t$('#pd-svg-parent, #img-display-parent, #editor, #audio-parent').css('display', 'none');\n\t\t\n\t\tif (!opts.fileType) opts.fileType = '0';\n\t\t\n\t\tif (opts.fileType.indexOf('image') !== -1){\n\t\t\n\t\t\t// opening image file\n\t\t\t$('#img-display-parent, #img-display').css({\n\t\t\t\t'max-width'\t: $('#editor').width()+'px',\n\t\t\t\t'max-height': $('#editor').height()+'px'\n\t\t\t});\n\t\t\t$('#img-display-parent').css('display', 'block');\n\t\t\t\n\t\t\t$('#img-display').prop('src', 'media/'+opts.fileName);\n\t\t\t\n\t\t\t// stop comparison with file on disk\n\t\t\tthis.emit('compare-files', false);\n\t\t\t\n\t\t} else if (opts.fileType.indexOf('audio') !== -1){\n\t\t\t\n\t\t\t//console.log('opening audio file');\n\t\t\t\n\t\t\t$('#audio-parent').css({\n\t\t\t\t'display'\t: 'block',\n\t\t\t\t'max-width'\t: $('#editor').width()+'px',\n\t\t\t\t'max-height': $('#editor').height()+'px'\n\t\t\t});\n\t\t\t\t\t\t\n\t\t\t$('#audio').prop('src', 'media/'+opts.fileName); \n\t\t\t\n\t\t\t// stop comparison with file on disk\n\t\t\tthis.emit('compare-files', false);\n\t\t\t\n\t\t} else {\n\t\t\n\t\t\tif (opts.fileType === 'pd'){\n\t\t\t\n\t\t\t\t// we're opening a pd patch\n\t\t\t\tlet timestamp = performance.now();\n\t\t\t\tthis.emit('open-notification', {\n\t\t\t\t\tfunc: 'editor',\n\t\t\t\t\ttimestamp,\n\t\t\t\t\ttext: 'This is a preview only. GUI objects will not be updated and you cannot edit the patch (yet).'\n\t\t\t\t});\n\t\t\n\t\t\t\t// render pd patch\n\t\t\t\ttry{\n\t\t\t\t\t\n\t\t\t\t\t$('#pd-svg').html(pdfu.renderSvg(pdfu.parse(data), {svgFile: false})).css({\n\t\t\t\t\t\t'max-width'\t: $('#editor').width()+'px',\n\t\t\t\t\t\t'max-height': $('#editor').height()+'px'\n\t\t\t\t\t});\n\t\t\t\t\t\n\t\t\t\t\t$('#pd-svg-parent').css({\n\t\t\t\t\t\t'display'\t: 'block',\n\t\t\t\t\t\t'max-width'\t: $('#editor').width()+'px',\n\t\t\t\t\t\t'max-height': $('#editor').height()+'px'\n\t\t\t\t\t});\n\t\t\t\t\t\n\t\t\t\t\tthis.emit('close-notification', {timestamp});\n\t\t\t\t\t\n\t\t\t\t}\n\t\t\t\tcatch(e){\n\t\t\t\t\tthis.emit('close-notification', {\n\t\t\t\t\t\ttimestamp,\n\t\t\t\t\t\ttext: 'Rendering pd patch failed!'\n\t\t\t\t\t});\n\t\t\t\t\tthrow e;\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\t// load an empty string into the editor\n\t\t\t\t// data = '';\n\t\t\t\t\n\t\t\t\t// start comparison with file on disk\n\t\t\t\tthis.emit('compare-files', true);\n\t\t\t\n\t\t\t} else {\n\t\t\t\n\t\t\t\t// show the editor\n\t\t\t\t$('#editor').css('display', 'block');\n\t\t\t\t\n\t\t\t\t// stop comparison with file on disk\n\t\t\t\tthis.emit('compare-files', false);\n\t\t\t\t\n\t\t\t}\n\n\t\t\t// block upload\n\t\t\tuploadBlocked = true;\n\t\n\t\t\t// put the file into the editor\n\t\t\tthis.editor.session.setValue(data, -1);\n\t\t\t\n\t\t\t// parse the data\n\t\t\tthis.parser.parse();\n\t\n\t\t\t// unblock upload\n\t\t\tuploadBlocked = false;\n\n\t\t\t// force a syntax check\n\t\t\tthis.emit('check-syntax');\n\n\t\t\t// focus the editor\n\t\t\tthis.__focus(opts.focus);\n\t\t\n\t\t}\n\t\t\n\t}\n\t// editor focus has changed\n\t__focus(data){\n\n\t\tif (data && data.line !== undefined && data.column !== undefined)\n\t\t\tthis.editor.gotoLine(data.line, data.column);\n\t\t\t\n\t\tthis.editor.focus();\n\t}\n\t// syntax errors in current file have changed\n\t_currentFileErrors(errors){\n\n\t\t// clear any error annotations on the ace editor\n\t\tthis.editor.session.clearAnnotations();\n\n\t\tif (errors.length >= 1){\t\t\n\t\t\t// errors exist!\n\t\t\t// annotate the errors in this file\n\t\t\tthis.editor.session.setAnnotations(errors);\n\t\t\t\t\t\t\n\t\t}\n\t}\t\n\t// autocomplete settings have changed\n\t_liveAutocompletion(status){\n\t//console.log(status, (parseInt(status) === 1));\n\t\tthis.editor.setOptions({\n\t\t\tenableLiveAutocompletion: (parseInt(status) === 1)\n\t\t});\n\t}\n\t// readonly status has changed\n\t_readOnly(status){\n\t\tif (status){\n\t\t\tthis.editor.setReadOnly(true);\n\t\t} else {\n\t\t\tthis.editor.setReadOnly(false);\n\t\t}\n\t}\n\t// a new file has been opened\n\t_fileName(name, data){\n\t\tcurrentFile = name;\n\t}\n\t\n\tgetCurrentWord(){\n\t\tvar pos = this.editor.getCursorPosition();\n\t\t//var range = this.editor.session.getAWordRange(pos.row, pos.column);\n\t\t/*var word = this.editor.session.getTextRange(this.editor.session.getAWordRange(pos.row, pos.column)).trim();\n\t\tvar index = activeWords.indexOf(word);\n\t\tvar id;\n\t\tif (index !== -1) id = activeWordIDs[index]; \n\t\t//console.log(word, index);\n\t\tthis.emit('goto-docs', index, word, id);*/\n\t\t\n\t\tvar iterator = new TokenIterator(this.editor.getSession(), pos.row, pos.column);\n\t\tvar token = iterator.getCurrentToken();\n\t\tif (!token || !token.range){\n\t\t\t//console.log('no range');\n\t\t\tthis.emit('clear-docs');\n\t\t\treturn;\n\t\t}\n\t\t\n\t\t//console.log('clicked', token); \n\t\t\t\t\n\t\tvar markers = this.parser.getMarkers();\n\t\tfor (let marker of markers){\n\t\t\tif (token.range.isEqual(marker.range) && marker.type && marker.type.name && marker.type.id){\n\t\t\t\t//console.log(marker);\n\t\t\t\tthis.emit('goto-docs', marker.type.name, marker.type.id);\n\t\t\t\treturn;\n\t\t\t}\n\t\t}\n\t\t\n\t\tthis.emit('clear-docs');\n\t}\n\t\n\tgetData(){\n\t\treturn this.editor.getValue();\n\t}\n}\n\nmodule.exports = EditorView;","var View = require('./View');\nvar popup = require('../popup');\n\nvar sourceIndeces = ['cpp', 'c', 'S'];\nvar headerIndeces = ['h', 'hh', 'hpp'];\n\nvar askForOverwrite = true;\nvar uploadingFile = false;\nvar overwriteAction = '';\nvar fileQueue = [];\nvar forceRebuild = false;\nvar viewHiddenFiles = false;\nvar firstViewHiddenFiles = true;\n\nclass FileView extends View {\n\t\n\tconstructor(className, models){\n\t\tsuper(className, models);\n\t\t\n\t\tthis.listOfFiles = [];\n\n\t\t// hack to upload file\n\t\t$('#uploadFileInput').on('change', (e) => {\n\t\t\tfor (var i=0; i<e.target.files.length; i++){\n\t\t\t\tthis.doFileUpload(e.target.files[i]);\n\t\t\t}\n\t\t});\n\t\t\n\t\t// drag and drop file upload on editor\n\t\t$('body').on('dragenter dragover drop', (e) => {\n\t\t\te.stopPropagation();\n\t\t\te.preventDefault();\n\t\t\tif (e.type === 'drop'){\n\t\t\t\tfor (var i=0; i<e.originalEvent.dataTransfer.files.length; i++){\n\t\t\t\t\tthis.doFileUpload(e.originalEvent.dataTransfer.files[i]);\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn false;\n\t\t});\n\t\n\t}\n\t\n\t// UI events\n\tbuttonClicked($element, e){\n\t\tvar func = $element.data().func;\n\t\tif (func && this[func]){\n\t\t\tthis[func](func);\n\t\t}\n\t}\n\t\n\tnewFile(func){\n\t\n\t\t// build the popup content\n\t\tpopup.title('Creating a new file');\n\t\tpopup.subtitle('Enter the name of the new file. Only files with extensions .cpp, .c or .S will be compiled.');\n\t\t\n\t\tvar form = [];\n\t\tform.push('<input type=\"text\" placeholder=\"Enter the file name\">');\n\t\tform.push('</br >');\n\t\tform.push('<button type=\"submit\" class=\"button popup-create\">Create</button>');\n\t\tform.push('<button type=\"button\" class=\"button popup-cancel\">Cancel</button>');\n\t\t\n\t\tpopup.form.append(form.join('')).off('submit').on('submit', e => {\n\t\t\te.preventDefault();\n\t\t\tthis.emit('message', 'project-event', {func, newFile: sanitise(popup.find('input[type=text]').val())});\n\t\t\tpopup.hide();\n\t\t});\n\t\t\n\t\tpopup.find('.popup-cancel').on('click', popup.hide );\n\t\t\n\t\tpopup.show();\n\n\t}\n\tuploadFile(func){\n\t\t$('#uploadFileInput').trigger('click');\n\t}\n\trenameFile(func){\n\t\t\n\t\t// build the popup content\n\t\tpopup.title('Renaming this file');\n\t\tpopup.subtitle('Enter the new name of the file. Only files with extensions .cpp, .c or .S will be compiled.');\n\t\t\n\t\tvar form = [];\n\t\tform.push('<input type=\"text\" placeholder=\"Enter the new file name\">');\n\t\tform.push('</br >');\n\t\tform.push('<button type=\"submit\" class=\"button popup-rename\">Rename</button>');\n\t\tform.push('<button type=\"button\" class=\"button popup-cancel\">Cancel</button>');\n\t\t\n\t\tpopup.form.append(form.join('')).off('submit').on('submit', e => {\n\t\t\te.preventDefault();\n\t\t\tthis.emit('message', 'project-event', {func, newFile: sanitise(popup.find('input[type=text]').val())});\n\t\t\tpopup.hide();\n\t\t});\n\t\t\n\t\tpopup.find('.popup-cancel').on('click', popup.hide );\n\t\t\n\t\tpopup.show();\n\n\t}\n\tdeleteFile(func){\n\t\n\t\t// build the popup content\n\t\tpopup.title('Deleting file');\n\t\tpopup.subtitle('Are you sure you wish to delete this file? This cannot be undone!');\n\t\t\n\t\tvar form = [];\n\t\tform.push('<button type=\"submit\" class=\"button popup-delete\">Delete</button>');\n\t\tform.push('<button type=\"button\" class=\"button popup-cancel\">Cancel</button>');\n\t\t\n\t\tpopup.form.append(form.join('')).off('submit').on('submit', e => {\n\t\t\te.preventDefault();\n\t\t\tthis.emit('message', 'project-event', {func});\n\t\t\tpopup.hide();\n\t\t});\n\t\t\n\t\tpopup.find('.popup-cancel').on('click', popup.hide );\n\t\t\n\t\tpopup.show();\n\t\t\n\t\tpopup.find('.popup-delete').trigger('focus');\n\t\t\n\t}\n\topenFile(e){\n\t\tthis.emit('message', 'project-event', {func: 'openFile', newFile: $(e.currentTarget).data('file')})\n\t}\n\t\n\t// model events\n\t_fileList(files, data){\n\n\t\tthis.listOfFiles = files;\n\n\t\tvar $files = $('#fileList')\n\t\t$files.empty();\n\t\t\n\t\tif (!files.length) return;\n\n\t\tvar headers = [];\n\t\tvar sources = [];\n\t\tvar resources = [];\n\t\tvar directories = [];\n\t\t\n\t\tfor (let item of files){\n\n\t\t\t// exclude hidden files\n\t\t\tif (!viewHiddenFiles && (item.name[0] === '.' || (item.dir && item.name === 'build') || item.name === 'settings.json' || item.name === data.currentProject)) continue;\n\t\t\t\t\t\n\t\t\tif (item.dir){\n\t\t\t\n\t\t\t\tdirectories.push(item);\n\t\t\t\t\n\t\t\t} else {\n\t\t\t\n\t\t\t\tlet ext = item.name.split('.').pop();\n\t\t\t\t\n\t\t\t\tif (item.size < 1000000){\n\t\t\t\t\titem.size = (item.size/1000).toFixed(1)+'kb';\n\t\t\t\t} else if (item.size >= 1000000 && item.size < 1000000000){\n\t\t\t\t\titem.size = (item.size/1000000).toFixed(1)+'mb';\n\t\t\t\t} \n\t\t\t\n\t\t\t\tif (sourceIndeces.indexOf(ext) !== -1){\n\t\t\t\t\tsources.push(item);\n\t\t\t\t} else if (headerIndeces.indexOf(ext) !== -1){\n\t\t\t\t\theaders.push(item);\n\t\t\t\t} else if (item){\n\t\t\t\t\tresources.push(item);\n\t\t\t\t}\n\t\t\t\t\n\t\t\t}\n\t\t\t\n\t\t}\n\t\t\n\t\t//console.log(headers, sources, resources, directories);\n\n\t\theaders.sort( (a, b) => a.name - b.name );\n\t\tsources.sort( (a, b) => a.name - b.name );\n\t\tresources.sort( (a, b) => a.name - b.name );\n\t\tdirectories.sort( (a, b) => a.name - b.name );\n\t\t\n\t\t//console.log(headers, sources, resources, directories);\n\t\t\t\t\n\t\tif (headers.length){\n\t\t\t$('<li></li>').html('Headers:').appendTo($files);\n\t\t}\n\t\tfor (let i=0; i<headers.length; i++){\n\t\t\t$('<li></li>').addClass('sourceFile').html(headers[i].name+'<span class=\"file-list-size\">'+headers[i].size+'</span>').data('file', headers[i].name).appendTo($files).on('click', (e) => this.openFile(e));\n\t\t}\n\t\t\n\t\tif (sources.length){\n\t\t\t$('<li></li>').html('Sources:').appendTo($files);\n\t\t}\n\t\tfor (let i=0; i<sources.length; i++){\n\t\t\t$('<li></li>').addClass('sourceFile').html(sources[i].name+'<span class=\"file-list-size\">'+sources[i].size+'</span>').data('file', sources[i].name).appendTo($files).on('click', (e) => this.openFile(e));\n\t\t}\n\t\t\n\t\tif (resources.length){\n\t\t\t$('<li></li>').html('Resources:').appendTo($files);\n\t\t}\n\t\tfor (let i=0; i<resources.length; i++){\n\t\t\t$('<li></li>').addClass('sourceFile').html(resources[i].name+'<span class=\"file-list-size\">'+resources[i].size+'</span>').data('file', resources[i].name).appendTo($files).on('click', (e) => this.openFile(e));\n\t\t}\n\t\t\n\t\tif (directories.length){\n\t\t\t$('<li></li>').html('Directories:').appendTo($files);\n\t\t}\n\t\tfor (let dir of directories){\n\t\t\t$files.append(this.subDirs(dir));\n\t\t}\n\t\t\n\t\tif (data && data.fileName) this._fileName(data.fileName);\n\t}\n\t_fileName(file, data){\n\n\t\t// select the opened file in the file manager tab\n\t\t$('.selectedFile').removeClass('selectedFile');\n\t\t\n\t\tvar foundFile = false\n\t\t$('#fileList li').each(function(){\n\t\t\tif ($(this).data('file') === file){\n\t\t\t\t$(this).addClass('selectedFile');\n\t\t\t\tfoundFile = true;\n\t\t\t}\n\t\t});\n\t\t\t\t\n\t\tif (data && data.currentProject){\n\t\t\t// set download link\n\t\t\t$('#downloadFileLink').attr('href', '/download?project='+data.currentProject+'&file='+file);\n\t\t}\n\t}\n\t\n\tsubDirs(dir){\n\t\tvar ul = $('<ul></ul>').html(dir.name+':');\n\t\tfor (let child of dir.children){\n\t\t\tif (!child.dir){\n\t\t\t\tif (child.size < 1000000){\n\t\t\t\t\tchild.size = (child.size/1000).toFixed(1)+'kb';\n\t\t\t\t} else if (child.size >= 1000000 && child.size < 1000000000){\n\t\t\t\t\tchild.size = (child.size/1000000).toFixed(1)+'mb';\n\t\t\t\t} \n\t\t\t\t$('<li></li>').addClass('sourceFile').html(child.name+'<span class=\"file-list-size\">'+child.size+'</span>').data('file', (dir.dirPath || dir.name)+'/'+child.name).appendTo(ul).on('click', (e) => this.openFile(e));\n\t\t\t} else {\n\t\t\t\tchild.dirPath = (dir.dirPath || dir.name) + '/' + child.name;\n\t\t\t\tul.append(this.subDirs(child));\n\t\t\t}\n\t\t}\n\t\treturn ul;\n\t}\n\t\n\tdoFileUpload(file){\n\t\n\t\t//console.log('doFileUpload', file.name);\n\t\n\t\tif (uploadingFile){\n\t\t\t//console.log('queueing upload', file.name);\n\t\t\tfileQueue.push(file);\n\t\t\treturn;\n\t\t}\n\t\n\t\tvar fileExists = false;\n\t\tfor (let item of this.listOfFiles){\n\t\t\tif (item.name === sanitise(file.name)) fileExists = true;\n\t\t}\n\t\t\n\t\tif (file.name === 'settings.json') fileExists = true;\n\t\t\n\t\tif (file.name === '_main.pd') forceRebuild = true;\n\t\t\n\t\tif (fileExists && askForOverwrite){\n\t\t\n\t\t\tuploadingFile = true;\n\n\t\t\t// build the popup content\n\t\t\tpopup.title('Overwriting file');\n\t\t\tpopup.subtitle('The file '+file.name+' already exists in this project. Would you like to overwrite it?');\n\t\t\n\t\t\tvar form = [];\n\t\t\tform.push('<input id=\"popup-remember-upload\" type=\"checkbox\">');\n\t\t\tform.push('<label for=\"popup-remember-upload\">don\\'t ask me again this session</label>')\n\t\t\tform.push('</br >');\n\t\t\tform.push('<button type=\"submit\" class=\"button popup-upload\">Overwrite</button>');\n\t\t\tform.push('<button type=\"button\" class=\"button popup-cancel\">Cancel</button>');\n\t\t\n\t\t\tpopup.form.append(form.join('')).off('submit').on('submit', e => {\n\t\t\t\te.preventDefault();\n\t\t\t\tif (popup.find('input[type=checkbox]').is(':checked')){\n\t\t\t\t\taskForOverwrite = false;\n\t\t\t\t\toverwriteAction = 'upload';\n\t\t\t\t}\n\t\t\t\tthis.actuallyDoFileUpload(file, true);\n\t\t\t\tpopup.hide();\n\t\t\t\tuploadingFile = false;\n\t\t\t\tif (fileQueue.length){\n\t\t\t\t\tthis.doFileUpload(fileQueue.pop());\n\t\t\t\t}\n\t\t\t});\n\t\t\n\t\t\tpopup.find('.popup-cancel').on('click', () => {\n\t\t\t\tif (popup.find('input[type=checkbox]').is(':checked')){\n\t\t\t\t\taskForOverwrite = false;\n\t\t\t\t\toverwriteAction = 'reject';\n\t\t\t\t}\n\t\t\t\tpopup.hide();\n\t\t\t\tuploadingFile = false;\n\t\t\t\tforceRebuild = false;\n\t\t\t\tif (fileQueue.length) this.doFileUpload(fileQueue.pop());\n\t\t\t});\n\t\t\n\t\t\tpopup.show();\n\t\t\t\n\t\t\tpopup.find('.popup-cancel').focus();\n\t\t\t\n\t\t} else if (fileExists && !askForOverwrite){\n\t\t\n\t\t\tif (overwriteAction === 'upload')\n\t\t\t\tthis.actuallyDoFileUpload(file, !askForOverwrite);\n\t\t\telse {\n\t\t\t\t//console.log('rejected', file.name);\n\t\t\t\tthis.emit('file-rejected', file.name);\n\t\t\t}\n\t\t\t\t\n\t\t\tif (fileQueue.length) this.doFileUpload(fileQueue.pop());\n\t\t\t\n\t\t} else {\n\t\t\t\n\t\t\tthis.actuallyDoFileUpload(file, !askForOverwrite);\n\t\t\t\n\t\t\tif (fileQueue.length) this.doFileUpload(fileQueue.pop());\n\t\t\t\n\t\t}\n\t}\n\t\n\tactuallyDoFileUpload(file, force){\n\t\t//console.log('actuallyDoFileUpload', file.name, force);\n\t\tvar reader = new FileReader();\n\t\treader.onload = (ev) => this.emit('message', 'project-event', {func: 'uploadFile', newFile: sanitise(file.name), fileData: ev.target.result, force} );\n\t\treader.readAsArrayBuffer(file);\n\t\tif (forceRebuild && !fileQueue.length){\n\t\t\tforceRebuild = false;\n\t\t\tthis.emit('force-rebuild');\n\t\t}\n\t}\n\t\n\t_viewHiddenFiles(val){\n\t\tviewHiddenFiles = val;\n\t\tif (firstViewHiddenFiles){\n\t\t\tfirstViewHiddenFiles = false;\n\t\t} else {\n\t\t\tthis.emit('message', 'project-event', {func: 'openProject', timestamp: performance.now()} );\n\t\t}\n\t}\n\t\n}\n\nmodule.exports = FileView;\n\n// replace all non alpha-numeric chars other than '-' and '.' with '_'\nfunction sanitise(name){\n\treturn name.replace(/[^a-zA-Z0-9\\.\\-\\/~]/g, '_');\n}","'use strict';\nvar View = require('./View');\nvar popup = require('../popup');\n\nclass GitView extends View{\n\n\tconstructor(className, models, settings){\n\t\tsuper(className, models, settings);\t\t\n\n\t\tthis.$form = $('#gitForm');\n\t\tthis.$input = $('#gitInput');\n\n\t\t// git input events\n\t\tthis.$form.on('submit', (e) => {\n\t\t\te.preventDefault();\n\t\t\tthis.emit('git-event', {\n\t\t\t\tfunc: 'command', \n\t\t\t\tcommand: this.$input.val()\n\t\t\t});\n\t\t\tthis.$input.val('');\n\t\t});\n\t}\n\t\n\tbuttonClicked($element, e){\n\t\tvar func = $element.data().func;\n\t\tif (this[func]){\n\t\t\tthis[func]();\n\t\t\treturn;\n\t\t}\n\t\tvar command = $element.data().command;\n\t\tthis.emit('git-event', {func, command});\n\t}\n\t\n\tselectChanged($element, e){\n\t\tthis.emit('git-event', {\n\t\t\tfunc: 'command',\n\t\t\tcommand: 'checkout ' + ($(\"option:selected\", $element).data('hash') || $(\"option:selected\", $element).val())\n\t\t});\n\t}\n\t\n\tcommit(){\n\t\n\t\t// build the popup content\n\t\tpopup.title('Committing to the project repository');\n\t\tpopup.subtitle('Enter a commit message');\n\t\t\n\t\tvar form = [];\n\t\tform.push('<input type=\"text\" placeholder=\"Enter your commit message\">');\n\t\tform.push('</br >');\n\t\tform.push('<button type=\"submit\" class=\"button popup-commit\">Commit</button>');\n\t\tform.push('<button type=\"button\" class=\"button popup-cancel\">Cancel</button>');\n\t\t\n\t\tpopup.form.append(form.join('')).off('submit').on('submit', e => {\n\t\t\te.preventDefault();\n\t\t\tthis.emit('git-event', {func: 'command', command: 'commit -am \"'+popup.find('input[type=text]').val()+'\"'});\n\t\t\tpopup.hide();\n\t\t});\n\t\t\n\t\tpopup.find('.popup-cancel').on('click', popup.hide );\n\t\t\n\t\tpopup.show();\n\n\t}\n\tbranch(){\n\t\t\n\t\t// build the popup content\n\t\tpopup.title('Creating a new branch');\n\t\tpopup.subtitle('Enter a name for the branch');\n\t\t\n\t\tvar form = [];\n\t\tform.push('<input type=\"text\" placeholder=\"Enter your new branch name\">');\n\t\tform.push('</br >');\n\t\tform.push('<button type=\"submit\" class=\"button popup-create\">Create</button>');\n\t\tform.push('<button type=\"button\" class=\"button popup-cancel\">Cancel</button>');\n\t\t\n\t\tpopup.form.append(form.join('')).off('submit').on('submit', e => {\n\t\t\te.preventDefault();\n\t\t\tthis.emit('git-event', {func: 'command', command: 'checkout -b '+popup.find('input[type=text]').val()});\n\t\t\tpopup.hide();\n\t\t});\n\t\t\n\t\tpopup.find('.popup-cancel').on('click', popup.hide );\n\t\t\n\t\tpopup.show();\n\n\t}\n\t\n\tdiscardChanges(){\n\t\t\n\t\t// build the popup content\n\t\tpopup.title('Discarding changes');\n\t\tpopup.subtitle('You are about to discard all changes made in your project since the last commit. The command used is \"git checkout -- .\". Are you sure you wish to continue? This cannot be undone.');\n\t\t\n\t\tvar form = [];\n\t\tform.push('<button type=\"submit\" class=\"button popup-continue\">Continue</button>');\n\t\tform.push('<button type=\"button\" class=\"button popup-cancel\">Cancel</button>');\n\t\t\n\t\tpopup.form.append(form.join('')).off('submit').on('submit', e => {\n\t\t\te.preventDefault();\n\t\t\tthis.emit('git-event', {func: 'command', command: 'checkout -- .'});\n\t\t\tpopup.hide();\n\t\t});\n\t\t\n\t\tpopup.find('.popup-create').on('click', popup.hide );\n\t\t\n\t\tpopup.show();\n\t\t\n\t\tpopup.find('.popup-continue').trigger('focus');\n\t\t\n\t}\n\t\n\t_repoExists(exists){\n\t\tif (exists){\n\t\t\t$('#repo').css('display', 'block');\n\t\t\t$('#noRepo').css('display', 'none');\n\t\t} else {\n\t\t\t$('#repo').css('display', 'none');\n\t\t\t$('#noRepo').css('display', 'block');\n\t\t}\n\t}\n\t__commits(commits, git){\n\n\t\tvar commits = commits.split('\\n');\n\t\tvar current = git.currentCommit.trim();\n\t\tvar branches = git.branches.split('\\n');\n\t\t\n\t\t// fill commits menu\n\t\tvar $commits = $('#commits');\n\t\t$commits.empty();\n\n\t\tvar commit, hash, opt;\n\t\tfor (var i=0; i<commits.length; i++){\n\t\t\tcommit = commits[i].split(' ');\n\t\t\tif (commit.length > 2){\n\t\t\t\thash = commit.pop().trim();\n\t\t\t\topt = $('<option></option>').html(commit.join(' ')).data('hash', hash).appendTo($commits);\n\t\t\t\tif (hash === current){\n\t\t\t\t\t$(opt).attr('selected', 'selected');\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\t//$('<option></option>').html(commit).appendTo($commits);\n\t\t\t\tif (!(commit.length == 1 && commit[0] === '')) console.log('skipped commit', commit);\n\t\t\t}\n\t\t}\n\t\t\n\t\t// fill branches menu\n\t\tvar $branches = $('#branches');\n\t\t$branches.empty();\n\t\t\n\t\tfor (var i=0; i<branches.length; i++){\n\t\t\tif (branches[i]){\n\t\t\t\topt = $('<option></option>').html(branches[i]).appendTo($branches);\n\t\t\t\tif (branches[i][0] === '*'){\n\t\t\t\t\t$(opt).attr('selected', 'selected');\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\t__stdout(text, git){\n\t\tthis.emit('console', text);\n\t}\n\t__stderr(text){\n\t\tthis.emit('console', text);\n\t}\n\t\n}\n\nmodule.exports = GitView;\n","var View = require('./View');\nvar popup = require('../popup');\n\nclass ProjectView extends View {\n\t\n\tconstructor(className, models){\n\t\tsuper(className, models);\n\t\t\n\t\t//this.exampleChanged = false;\n\t\tthis.on('example-changed', () => this.exampleChanged = true );\n\t}\n\n\t// UI events\n\tselectChanged($element, e){\n\t\n\t\tif (this.exampleChanged){\n\t\t\tthis.exampleChanged = false;\n\t\t\tpopup.exampleChanged( () => {\n\t\t\t\tthis.emit('message', 'project-event', {func: $element.data().func, currentProject: $element.val()});\n\t\t\t}, undefined, 0, () => {\n\t\t\t\t$element.find('option').filter(':selected').attr('selected', '');\n\t\t\t\t$element.val($('#projects > option:first').val());\n\t\t\t\tthis.exampleChanged = true;\n\t\t\t});\n\t\t\treturn;\n\t\t}\n\n\t\tthis.emit('message', 'project-event', {func: $element.data().func, currentProject: $element.val()})\n\t\t\n\t}\n\tbuttonClicked($element, e){\n\t\tvar func = $element.data().func;\n\t\tif (func && this[func]){\n\t\t\tthis[func](func);\n\t\t}\n\t}\n\t\n\tnewProject(func){\n\n\t\tif (this.exampleChanged){\n\t\t\tthis.exampleChanged = false;\n\t\t\tpopup.exampleChanged(this.newProject.bind(this), func, 500, () => this.exampleChanged = true );\n\t\t\treturn;\n\t\t}\n\t\t\t\t\n\t\t// build the popup content\n\t\tpopup.title('Creating a new project');\n\t\tpopup.subtitle('Choose what kind of project you would like to create, and enter the name of your new project');\n\t\t\n\t\tvar form = [];\n\t\tform.push('<input id=\"popup-C\" type=\"radio\" name=\"project-type\" data-type=\"C\" checked>');\n\t\tform.push('<label for=\"popup-C\">C++</label>')\n\t\tform.push('</br>');\n\t\tform.push('<input id=\"popup-PD\" type=\"radio\" name=\"project-type\" data-type=\"PD\">');\n\t\tform.push('<label for=\"popup-PD\">Pure Data</label>')\n\t\tform.push('</br>');\n\t\tform.push('<input id=\"popup-SC\" type=\"radio\" name=\"project-type\" data-type=\"SC\">');\n\t\tform.push('<label for=\"popup-SC\">SuperCollider</label>')\n\t\tform.push('</br>');\n\t\tform.push('<input type=\"text\" placeholder=\"Enter your project name\">');\n\t\tform.push('</br>');\n\t\tform.push('<button type=\"submit\" class=\"button popup-save\">Create</button>');\n\t\tform.push('<button type=\"button\" class=\"button popup-cancel\">Cancel</button>');\n\t\t\n\t\tpopup.form.append(form.join('')).off('submit').on('submit', e => {\n\t\t\te.preventDefault();\n\t\t\tthis.emit('message', 'project-event', {\n\t\t\t\tfunc, \n\t\t\t\tnewProject\t: sanitise(popup.find('input[type=text]').val()),\n\t\t\t\tprojectType\t: popup.find('input[type=radio]:checked').data('type')\n\t\t\t});\n\t\t\tpopup.hide();\n\t\t});\n\t\t\n\t\tpopup.find('.popup-cancel').on('click', popup.hide );\n\t\t\n\t\tpopup.show();\n\n\t}\n\tsaveAs(func){\n\t\n\t\t// build the popup content\n\t\tpopup.title('Saving project');\n\t\tpopup.subtitle('Enter the name of your project');\n\t\t\n\t\tvar form = [];\n\t\tform.push('<input type=\"text\" placeholder=\"Enter the new project name\">');\n\t\tform.push('</br >');\n\t\tform.push('<button type=\"submit\" class=\"button popup-save\">Save</button>');\n\t\tform.push('<button type=\"button\" class=\"button popup-cancel\">Cancel</button>');\n\t\t\n\t\tpopup.form.append(form.join('')).off('submit').on('submit', e => {\n\t\t\te.preventDefault();\n\t\t\tthis.emit('message', 'project-event', {func, newProject: sanitise(popup.find('input[type=text]').val())});\n\t\t\tpopup.hide();\n\t\t});\n\t\t\n\t\tpopup.find('.popup-cancel').on('click', popup.hide );\n\t\t\n\t\tpopup.show();\n\n\t}\n\tdeleteProject(func){\n\n\t\t// build the popup content\n\t\tpopup.title('Deleting project');\n\t\tpopup.subtitle('Are you sure you wish to delete this project? This cannot be undone!');\n\t\t\n\t\tvar form = [];\n\t\tform.push('<button type=\"submit\" class=\"button popup-delete\">Delete</button>');\n\t\tform.push('<button type=\"button\" class=\"button popup-cancel\">Cancel</button>');\n\t\t\n\t\tpopup.form.append(form.join('')).off('submit').on('submit', e => {\n\t\t\te.preventDefault();\n\t\t\tthis.emit('message', 'project-event', {func});\n\t\t\tpopup.hide();\n\t\t});\n\t\t\n\t\tpopup.find('.popup-cancel').on('click', popup.hide );\n\t\t\n\t\tpopup.show();\n\t\t\n\t\tpopup.find('.popup-delete').trigger('focus');\n\t\t\n\t}\n\tcleanProject(func){\n\t\tthis.emit('message', 'project-event', {func});\n\t}\n\t\n\t// model events\n\t_projectList(projects, data){\n\n\t\tvar $projects = $('#projects');\n\t\t$projects.empty();\n\t\t\n\t\t// add an empty option to menu and select it\n\t\tvar opt = $('<option></option>').attr({'value': '', 'selected': 'selected'}).html('--Projects--').appendTo($projects);\n\n\t\t// fill project menu with projects\n\t\tfor (let i=0; i<projects.length; i++){\n\t\t\tif (projects[i] && projects[i] !== 'undefined' && projects[i] !== 'exampleTempProject' && projects[i][0] !== '.'){\n\t\t\t\tvar opt = $('<option></option>').attr('value', projects[i]).html(projects[i]).appendTo($projects);\n\t\t\t}\n\t\t}\n\t\t\n\t\tif (data && data.currentProject) this._currentProject(data.currentProject);\n\t\t\n\t}\n\t_exampleList(examplesDir){\n\n\t\tvar $examples = $('#examples');\n\t\t$examples.empty();\n\n\t\tif (!examplesDir.length) return;\n\n\t\tfor (let item of examplesDir){\n\t\t\tlet ul = $('<ul></ul>').html(item.name+':');\n\t\t\tfor (let child of item.children){\n\t\t\t\tif (child && child.length && child[0] === '.') continue;\n\t\t\t\t$('<li></li>').addClass('sourceFile').html(child).appendTo(ul)\n\t\t\t\t\t.on('click', (e) => {\n\n\t\t\t\t\t\tif (this.exampleChanged){\n\t\t\t\t\t\t\tthis.exampleChanged = false;\n\t\t\t\t\t\t\tpopup.exampleChanged( () => {\n\t\t\t\t\t\t\t\tthis.emit('message', 'project-event', {\n\t\t\t\t\t\t\t\t\tfunc: 'openExample',\n\t\t\t\t\t\t\t\t\tcurrentProject: item.name+'/'+child\n\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t\t$('.selectedExample').removeClass('selectedExample');\n\t\t\t\t\t\t\t\t$(e.target).addClass('selectedExample');\n\t\t\t\t\t\t\t}, undefined, 0, () => this.exampleChanged = true );\n\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\n\t\t\t\t\t\tthis.emit('message', 'project-event', {\n\t\t\t\t\t\t\tfunc: 'openExample',\n\t\t\t\t\t\t\tcurrentProject: item.name+'/'+child\n\t\t\t\t\t\t});\n\t\t\t\t\t\t$('.selectedExample').removeClass('selectedExample');\n\t\t\t\t\t\t$(e.target).addClass('selectedExample');\n\t\t\t\t\t\t\n\t\t\t\t\t});\n\t\t\t}\n\t\t\tul.appendTo($examples);\n\t\t}\n\t\t\n\t}\n\t_currentProject(project){\n\t\n\t\t// unselect currently selected project\n\t\t$('#projects').find('option').filter(':selected').attr('selected', '');\n\t\t\n\t\tif (project === 'exampleTempProject'){\n\t\t\t// select no project\n\t\t\t$('#projects').val($('#projects > option:first').val());\n\t\t} else {\n\t\t\t// select new project\n\t\t\t//$('#projects option[value=\"'+project+'\"]').attr('selected', 'selected');\n\t\t\t$('#projects').val($('#projects > option[value=\"'+project+'\"]').val());\n\t\t\t// unselect currently selected example\n\t\t\t$('.selectedExample').removeClass('selectedExample');\n\t\t}\n\t\t\n\t\t// set download link\n\t\t$('#downloadLink').attr('href', '/download?project='+project);\n\t\t\n\t}\n\t\n\t__currentProject(){\n\t\tthis.exampleChanged = false;\n\t}\n\t\n\tsubDirs(dir){\n\t\tvar ul = $('<ul></ul>').html(dir.name+':');\n\t\tfor (let child of dir.children){\n\t\t\tif (!child.dir)\n\t\t\t\t$('<li></li>').addClass('sourceFile').html(child.name).data('file', (dir.dirPath || dir.name)+'/'+child.name).appendTo(ul);\n\t\t\telse {\n\t\t\t\tchild.dirPath = (dir.dirPath || dir.name) + '/' + child.name;\n\t\t\t\tul.append(this.subDirs(child));\n\t\t\t}\n\t\t}\n\t\treturn ul;\n\t}\n\t\n}\n\nmodule.exports = ProjectView;\n\n// replace all non alpha-numeric chars other than '-' and '.' with '_'\nfunction sanitise(name){\n\treturn name.replace(/[^a-zA-Z0-9\\.\\-]/g, '_');\n}","var View = require('./View');\nvar popup = require('../popup');\n\nvar inputChangedTimeout;\n\nclass SettingsView extends View {\n\t\n\tconstructor(className, models, settings){\n\t\tsuper(className, models, settings);\n\t\t//this.$elements.filter('input').on('change', (e) => this.selectChanged($(e.currentTarget), e));\n\t\tthis.settings.on('change', (data) => this._IDESettings(data) );\n\t\tthis.$elements.filterByData = function(prop, val) {\n\t\t\treturn this.filter(\n\t\t\t\tfunction() { return $(this).data(prop)==val; }\n\t\t\t);\n\t\t}\n\t\t\n\t\t$('#runOnBoot').on('change', () => {\n\t\t\tif ($('#runOnBoot').val() && $('#runOnBoot').val() !== '--select--')\n\t\t\t\tthis.emit('run-on-boot', $('#runOnBoot').val());\n\t\t});\n\t\t\t\t\n\t\t$('.audioExpanderCheck').on('change', e => {\n\t\t\tvar inputs = '', outputs = '';\n\t\t\t$('.audioExpanderCheck').each(function(){\n\t\t\t\tvar $this = $(this);\n\t\t\t\tif ($this.is(':checked')){\n\t\t\t\t\tif ($this.data('func') === 'input'){\n\t\t\t\t\t\tinputs += $this.data('channel') + ',';\n\t\t\t\t\t} else {\n\t\t\t\t\t\toutputs += $this.data('channel') + ',';\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t});\n\t\t\tif (inputs.length) inputs = inputs.slice(0, -1);\n\t\t\tif (outputs.length) outputs = outputs.slice(0, -1);\n\n\t\t\tthis.emit('project-settings', {func: 'setCLArgs', args: [{key: '-Y', value: inputs}, {key: '-Z', value: outputs}] });\n\t\t});\n\t\t\n\t}\n\t\n\tselectChanged($element, e){\n\t\tvar data = $element.data();\n\t\tvar func = data.func;\n\t\tvar key = data.key;\n\t\tif (func && this[func]){\n\t\t\tthis[func](func, key, $element.val());\n\t\t}\n\t\tif (key === '-C'){\n\t\t\tthis.$elements.filterByData('key', key).not($element).val($element.val());\n\t\t}\n\t}\n\tbuttonClicked($element, e){\n\t\tvar func = $element.data().func;\n\t\tif (func && this[func]){\n\t\t\tthis[func](func);\n\t\t}\n\t}\n\tinputChanged($element, e){\n\t\tvar data = $element.data();\n\t\tvar func = data.func;\n\t\tvar key = data.key;\n\t\tvar type = $element.prop('type');\n\t\tconsole.log(key);\n\t\tif (type === 'number' || type === 'text'){\n\t\t\tif (func && this[func]){\n\t\t\t\tthis[func](func, key, $element.val());\n\t\t\t}\n\t\t} else if (type === 'checkbox'){\n\t\t\tif (func && this[func]){\n\t\t\t\tthis[func](func, key, $element.is(':checked') ? 1 : 0);\n\t\t\t}\n\t\t}\n\t}\n\t\n\tsetCLArg(func, key, value){\n\t\tthis.emit('project-settings', {func, key, value});\n\t}\n\trestoreDefaultCLArgs(func){\n\t\t\n\t\t// build the popup content\n\t\tpopup.title('Restoring default project settings');\n\t\tpopup.subtitle('Are you sure you wish to continue? Your current project settings will be lost!');\n\t\t\n\t\tvar form = [];\n\t\tform.push('<button type=\"submit\" class=\"button popup-continue\">Continue</button>');\n\t\tform.push('<button type=\"button\" class=\"button popup-cancel\">Cancel</button>');\n\t\t\n\t\tpopup.form.append(form.join('')).off('submit').on('submit', e => {\n\t\t\te.preventDefault();\n\t\t\tthis.emit('project-settings', {func});\n\t\t\tpopup.hide();\n\t\t});\n\t\t\n\t\tpopup.find('.popup-cancel').on('click', popup.hide );\n\t\t\n\t\tpopup.show();\n\t\t\n\t\tpopup.find('.popup-continue').trigger('focus');\n\n\t}\n\t\n\tsetIDESetting(func, key, value){\n\t\tthis.emit('IDE-settings', {func, key, value: value});\n\t}\n\trestoreDefaultIDESettings(func){\n\t\t\n\t\t// build the popup content\n\t\tpopup.title('Restoring default IDE settings');\n\t\tpopup.subtitle('Are you sure you wish to continue? Your current IDE settings will be lost!');\n\t\t\n\t\tvar form = [];\n\t\tform.push('<button type=\"submit\" class=\"button popup-continue\">Continue</button>');\n\t\tform.push('<button type=\"button\" class=\"button popup-cancel\">Cancel</button>');\n\t\t\n\t\tpopup.form.append(form.join('')).off('submit').on('submit', e => {\n\t\t\te.preventDefault();\n\t\t\tthis.emit('IDE-settings', {func});\n\t\t\tpopup.hide();\n\t\t});\n\t\t\n\t\tpopup.find('.popup-cancel').on('click', popup.hide );\n\t\t\n\t\tpopup.show();\n\t\t\n\t\tpopup.find('.popup-continue').trigger('focus');\n\t\t\n\t}\n\t\n\tshutdownBBB(){\n\t\n\t\t// build the popup content\n\t\tpopup.title('Shutting down Bela');\n\t\tpopup.subtitle('Are you sure you wish to continue? The BeagleBone will shutdown gracefully, and the IDE will disconnect.');\n\t\t\n\t\tvar form = [];\n\t\tform.push('<button type=\"submit\" class=\"button popup-continue\">Continue</button>');\n\t\tform.push('<button type=\"button\" class=\"button popup-cancel\">Cancel</button>');\n\t\t\n\t\tpopup.form.append(form.join('')).off('submit').on('submit', e => {\n\t\t\te.preventDefault();\n\t\t\tthis.emit('halt');\n\t\t\tpopup.hide();\n\t\t});\n\t\t\n\t\tpopup.find('.popup-cancel').on('click', popup.hide );\n\t\t\n\t\tpopup.show();\n\t\t\n\t\tpopup.find('.popup-continue').trigger('focus');\n\t\n\t}\n\taboutPopup(){\n\t\t\n\t\t// build the popup content\n\t\tpopup.title('About Bela');\n\t\tpopup.subtitle('You are using Bela Version 0.2, October 2016. Bela is an open source project, and is a product of the Augmented Instruments Laboratory at Queen Mary University of London, and Augmented Instruments Ltd. For more information, visit http://bela.io');\n\t\tvar form = [];\n\t\tform.push('<button type=\"submit\" class=\"button popup-continue\">Close</button>');\n\t\t\n\t\tpopup.form.append(form.join('')).off('submit').on('submit', e => {\n\t\t\te.preventDefault();\n\t\t\tpopup.hide();\n\t\t});\n\t\t\t\t\n\t\tpopup.show();\n\t\t\n\t\tpopup.find('.popup-continue').trigger('focus');\n\t\t\n\t}\n\tupdateBela(){\n\t\n\t\t// build the popup content\n\t\tpopup.title('Updating Bela');\n\t\tpopup.subtitle('Please select the update zip archive');\n\t\t\n\t\tvar form = [];\n\t\tform.push('<input id=\"popup-update-file\" type=\"file\">');\n\t\tform.push('</br>');\n\t\tform.push('<button type=\"submit\" class=\"button popup-upload\">Upload</button>');\n\t\tform.push('<button type=\"button\" class=\"button popup-cancel\">Cancel</button>');\n\n\t\t/*popup.form.prop({\n\t\t\taction\t: 'updates',\n\t\t\tmethod\t: 'get',\n\t\t\tenctype\t: 'multipart/form-data'\n\t\t});*/\n\t\t\n\t\tpopup.form.append(form.join('')).off('submit').on('submit', e => {\n\t\t\n\t\t\t//console.log('submitted', e);\n\t\t\t\n\t\t\te.preventDefault();\n\t\t\t\n\t\t\tvar file = popup.find('input[type=file]').prop('files')[0];\n\t\t\t\n\t\t\t//console.log('input', popup.find('input[type=file]'));\n\t\t\t//console.log('file', file);\n\t\t\t\n\t\t\tif (file){\n\t\t\t\n\t\t\t\tthis.emit('warning', 'Beginning the update - this may take several minutes');\n\t\t\t\tthis.emit('warning', 'The browser may become unresponsive and will temporarily disconnect');\n\t\t\t\tthis.emit('warning', 'Do not use the IDE during the update process!');\n\t\t\t\t\n\t\t\t\tpopup.hide('keep overlay');\n\t\t\t\t\n\t\t\t\tvar reader = new FileReader();\n\t\t\t\treader.onload = (ev) => this.emit('upload-update', {name: file.name, file: ev.target.result} );\n\t\t\t\treader.readAsArrayBuffer(file);\n\t\t\t\t\n\t\t\t} else {\n\t\t\t\n\t\t\t\tthis.emit('warning', 'not a valid update zip archive');\n\t\t\t\tpopup.hide();\n\t\t\t\t\n\t\t\t}\n\t\t\t\n\t\t});\n\t\t\n\t\tpopup.find('.popup-cancel').on('click', popup.hide );\n\t\t\t\t\n\t\tpopup.show();\n\t\t\n\t}\n\t\n\t// model events\n\t__CLArgs(data){\n\n\t\tfor (let key in data) {\n\t\t\n\t\t\tif (key === '-Y' || key === '-Z'){\n\t\t\t\tthis.setAudioExpander(key, data[key]);\n\t\t\t\tcontinue;\n\t\t\t} else if (key === 'audioExpander'){\n\t\t\t\tif (data[key] == 1)\n\t\t\t\t\t$('#audioExpanderTable').css('display', 'table');\n\t\t\t\telse\n\t\t\t\t\t$('#audioExpanderTable').css('display', 'none');\n\t\t\t}\n\t\t\n\t\t\tlet el = this.$elements.filterByData('key', key);\n\n\t\t\t// set the input value\n\t\t\tif (el[0].type === 'checkbox') {\n\t\t\t\tel.prop('checked', (data[key] == 1));\n\t\t\t} else {\n\t\t\t\t//console.log(el.val(), data[key]);\n\t\t\t\tel.val(data[key]);\n\t\t\t}\n\t\t\t\n\t\t\t\n\t\t}\n\n\t}\n\t_IDESettings(data){\n\t\tfor (let key in data){\n\t\t\tthis.$elements.filterByData('key', key).val(data[key]).prop('checked', data[key]);\n\t\t}\n\t}\n\t_projectList(projects, data){\n\n\t\tvar $projects = $('#runOnBoot');\n\t\t$projects.empty();\n\t\t\n\t\t// add an empty option to menu and select it\n\t\t$('<option></option>').html('--select--').appendTo($projects);\n\t\t\n\t\t// add a 'none' option\n\t\t$('<option></option>').attr('value', 'none').html('none').appendTo($projects);\n\n\t\t// fill project menu with projects\n\t\tfor (let i=0; i<projects.length; i++){\n\t\t\tif (projects[i] && projects[i] !== 'undefined' && projects[i] !== 'exampleTempProject' && projects[i][0] !== '.'){\n\t\t\t\t$('<option></option>').attr('value', projects[i]).html(projects[i]).appendTo($projects);\n\t\t\t}\n\t\t}\n\t\t\n\t}\n\t\n\tuseAudioExpander(func, key, val){\n\t\t\n\t\tif (val == 1) {\n\t\t\t$('#audioExpanderTable').css('display', 'table');\n\t\t\tthis.setCLArg('setCLArg', key, val);\n\t\t} else {\n\t\t\t$('#audioExpanderTable').css('display', 'none');\n\t\t\t// clear channel picker\n\t\t\t$('.audioExpanderCheck').prop('checked', false);\n\t\t\tthis.emit('project-settings', {func: 'setCLArgs', args: [\n\t\t\t\t{key: '-Y', value: ''}, \n\t\t\t\t{key: '-Z', value: ''},\n\t\t\t\t{key, value: val}\n\t\t\t] });\n\t\t}\n\t}\n\t\n\tsetAudioExpander(key, val){\n\t\t\n\t\tif (!val.length) return;\n\t\t\n\t\tvar channels = val.split(',');\n\n\t\tif (!channels.length) return;\n\t\t\n\t\t$('.audioExpanderCheck').each( function(){\n\t\t\tlet $this = $(this);\n\t\t\tif (($this.data('func') === 'input' && key === '-Y') || ($this.data('func') === 'output' && key === '-Z')){\n\t\t\t\tlet checked = false;\n\t\t\t\tfor (let channel of channels){\n\t\t\t\t\tif (channel == $this.data('channel'))\n\t\t\t\t\t\tchecked = true;\n\t\t\t\t}\t\n\t\t\t\t$this.prop('checked', checked);\t\n\t\t\t}\n\t\t});\n\t\t\n\t}\n}\n\nmodule.exports = SettingsView;\n","var View = require('./View');\n\n// private variables\nvar _tabsOpen = false;\n\nclass TabView extends View {\n\t\n\tconstructor(){\n\t\n\t\tsuper('tab');\n\n\t\t// open/close tabs \n\t\t$('#flexit').on('click', () => {\n\t\t\tif (_tabsOpen){\n\t\t\t\tthis.closeTabs();\n\t\t\t} else {\t\t\t\t\n\t\t\t\tthis.openTabs();\n\t\t\t}\n\t\t});\n\n\t\t$('.tab > label').on('click', (e) => {\n\t\t\tif (!_tabsOpen){\n\t\t\t\tif ($(e.currentTarget).prop('id') === 'tab-0' && $('[type=radio]:checked ~ label').prop('id') === 'tab-0')\n\t\t\t\t\t$('#file-explorer').parent().trigger('click');\n\n\t\t\t\tthis.openTabs();\n\t\t\t\te.stopPropagation();\n\t\t\t}\n\t\t});\n\t\t\n\t\t// golden layout\n\t\tvar layout = new GoldenLayout({\n\t\t\tsettings:{\n\t\t\t\thasHeaders: false,\n\t\t\t\tconstrainDragToContainer: true,\n\t\t\t\treorderEnabled: false,\n\t\t\t\tselectionEnabled: false,\n\t\t\t\tpopoutWholeStack: false,\n\t\t\t\tblockedPopoutsThrowError: true,\n\t\t\t\tclosePopoutsOnUnload: true,\n\t\t\t\tshowPopoutIcon: false,\n\t\t\t\tshowMaximiseIcon: false,\n\t\t\t\tshowCloseIcon: false\n\t\t\t},\n\t\t\tdimensions: {\n\t\t\t\tborderWidth: 5,\n\t\t\t\tminItemHeight: 10,\n\t\t\t\tminItemWidth: 10,\n\t\t\t\theaderHeight: 20,\n\t\t\t\tdragProxyWidth: 300,\n\t\t\t\tdragProxyHeight: 200\n\t\t\t},\n\t\t\tlabels: {\n\t\t\t\tclose: 'close',\n\t\t\t\tmaximise: 'maximise',\n\t\t\t\tminimise: 'minimise',\n\t\t\t\tpopout: 'open in new window'\n\t\t\t},\n\t\t\tcontent: [{\n\t\t\t\ttype: 'column',\n\t\t\t\tcontent: [{\n\t\t\t\t\ttype:'row',\n\t\t\t\t\tcontent: [{\n\t\t\t\t\t\ttype:'component',\n\t\t\t\t\t\tcomponentName: 'Editor',\n\t\t\t\t\t}]\n\t\t\t\t}, {\n\t\t\t\t\ttype:'component',\n\t\t\t\t\tcomponentName: 'Console',\n\t\t\t\t\theight: 25\n\t\t\t\t}]\n\t\t\t}]\n\t\t});\n\t\tlayout.registerComponent( 'Editor', function( container, componentState ){\n\t\t\tcontainer.getElement().append($('#innerContent'));\n\t\t});\n\t\tlayout.registerComponent( 'Console', function( container, componentState ){\n\t\t\tcontainer.getElement().append($('#beaglert-console'));\n\t\t});\n\t\t\n\t\tlayout.init();\n\t\tlayout.on('initialised', () => this.emit('change') );\n\t\tlayout.on('stateChanged', () => this.emit('change') );\n\t\t\n\t\t$(window).on('resize', () => {\n\t\t\tif (_tabsOpen){\n\t\t\t\tthis.openTabs();\n\t\t\t} else {\n\t\t\t\tthis.closeTabs();\n\t\t\t}\n\t\t});\n\t\t\n\t\tthis.on('open-tab', (id) => $('#'+id).siblings('label').trigger('click') );\n\t\tthis.on('toggle', () => {\n\t\t\tif (_tabsOpen) this.closeTabs();\n\t\t\telse this.openTabs();\n\t\t})\n\t\t\n\t}\n\t\n\topenTabs(){\n\t\t$('#editor').css('right', '500px');\n\t\t$('#top-line').css('margin-right', '500px');\n\t\t$('#right').css('left', window.innerWidth - 500 + 'px');\n\t\t_tabsOpen = true;\n\t\tthis.emit('change');\n\t\t$('#tab-0').addClass('open');\n\t\t\n\t\t// fix pd patch\n\t\t$('#pd-svg-parent').css({\n\t\t\t'max-width'\t: $('#editor').width()+'px',\n\t\t\t'max-height': $('#editor').height()+'px'\n\t\t});\n\t}\n\n\tcloseTabs(){\n\t\t$('#editor').css('right', '60px');\n\t\t$('#top-line').css('margin-right', '60px');\n\t\t$('#right').css('left', window.innerWidth - 60 + 'px');\n\t\t_tabsOpen = false;\n\t\tthis.emit('change');\n\t\t$('#tab-0').removeClass('open');\n\t\t\n\t\t// fix pd patch\n\t\t$('#pd-svg-parent').css({\n\t\t\t'max-width'\t: $('#editor').width()+'px',\n\t\t\t'max-height': $('#editor').height()+'px'\n\t\t});\n\t\t\n\t}\n\t\n\tgetOpenTab(){\n\t\tif (!_tabsOpen) return false;\n\t\treturn $('[type=radio]:checked ~ label').prop('for');\n\t}\n\t\n}\n\nmodule.exports = new TabView();","var View = require('./View');\n\n// ohhhhh i am a comment\n\nvar modeswitches = 0;\n\nclass ToolbarView extends View {\n\t\n\tconstructor(className, models){\n\t\tsuper(className, models);\n\n\t\tthis.$elements.on('click', (e) => this.buttonClicked($(e.currentTarget), e));\n\t\t\n\t\tthis.on('disconnected', () => {\n\t\t\t$('#run').removeClass('running-button').removeClass('building-button');\n\t\t});\n\t\t\n\t\t$('#run')\n\t\t\t.mouseover(function() {\n\t\t\t\t$('#control-text-1').html('<p>Run</p>');\n\t\t\t})\n\t\t\t.mouseout(function() {\n\t\t\t\t$('#control-text-1').html('');\n\t\t\t});\n\t\t\n\t\t$('#stop')\n\t\t\t.mouseover(function() {\n\t\t\t\t$('#control-text-1').html('<p>Stop</p>');\n\t\t\t})\n\t\t\t.mouseout(function() {\n\t\t\t\t$('#control-text-1').html('');\n\t\t\t});\n\n\t\t$('#new-tab')\n\t\t\t.mouseover(function() {\n\t\t\t\t$('#control-text-2').html('<p>New Tab</p>');\n\t\t\t})\n\t\t\t.mouseout(function() {\n\t\t\t\t$('#control-text-2').html('');\n\t\t\t});\n\t\t\n\t\t$('#download')\n\t\t\t.mouseover(function() {\n\t\t\t\t$('#control-text-2').html('<p>Download</p>');\n\t\t\t})\n\t\t\t.mouseout(function() {\n\t\t\t\t$('#control-text-2').html('');\n\t\t\t});\n\n\t\t$('#console')\n\t\t\t.mouseover(function() {\n\t\t\t\t$('#control-text-3').html('<p>Clear console</p>');\n\t\t\t})\n\t\t\t.mouseout(function() {\n\t\t\t\t$('#control-text-3').html('');\n\t\t\t});\n\t\t\n\t\t$('#scope')\n\t\t\t.mouseover(function() {\n\t\t\t\t$('#control-text-3').html('<p>Open scope</p>');\n\t\t\t})\n\t\t\t.mouseout(function() {\n\t\t\t\t$('#control-text-3').html('');\n\t\t\t});\n\t}\n\t\n\t// UI events\n\tbuttonClicked($element, e){\n\t\tvar func = $element.data().func;\n\t\tif (func && this[func]){\n\t\t\tthis[func](func);\n\t\t}\n\t}\n\t\n\trun(func){\n\t\tthis.emit('process-event', func);\n\t}\n\t\n\tstop(func){\n\t\tthis.emit('process-event', func);\n\t}\n\t\n\tclearConsole(){\n\t\tthis.emit('clear-console');\n\t}\n\t\n\t// model events\n\t__running(status){\n\t\tif (status){\n\t\t\t$('#run').removeClass('building-button').addClass('running-button');\n\t\t} else {\n\t\t\t$('#run').removeClass('running-button');\n\t\t}\n\t}\n\t__building(status){\n\t\tif (status){\n\t\t\t$('#run').removeClass('running-button').addClass('building-button');\n\t\t} else {\n\t\t\t$('#run').removeClass('building-button');\n\t\t}\n\t}\n\t__checkingSyntax(status){\n\t\tif (status){\n\t\t\t$('#status').css('background', 'url(\"images/icons/status_wait.png\")').prop('title', 'checking syntax...');\n\t\t} else {\n\t\t\t//this.syntaxTimeout = setTimeout(() => $('#status').css('background', 'url(\"images/toolbar.png\") -140px 35px'), 10);\n\t\t}\n\t}\n\t__allErrors(errors){\n\t\t//if (this.syntaxTimeout) clearTimeout(this.syntaxTimeout); \n\t\tif (errors.length){\n\t\t\t$('#status').css('background', 'url(\"images/icons/status_stop.png\")').prop('title', 'syntax errors found'); \n\t\t} else {\n\t\t\t$('#status').css('background', 'url(\"images/icons/status_ok.png\")').prop('title', 'syntax check clear');\n\t\t}\n\t}\n\t\n\t_CPU(data){\n\n\t\tvar ide = (data.syntaxCheckProcess || 0) + (data.buildProcess || 0) + (data.node || 0);\n\t\tvar bela = 0, rootCPU = 1;\n\t\t\n\t\tif (data.bela != 0 && data.bela !== undefined){\n\t\t\n\t\t\t// extract the data from the output\n\t\t\tvar lines = data.bela.split('\\n');\n\t\t\tvar taskData = [], output = [];\n\t\t\tfor (var j=0; j<lines.length; j++){\n\t\t\t\ttaskData.push([]);\n\t\t\t\tlines[j] = lines[j].split(' ');\n\t\t\t\tfor (var k=0; k<lines[j].length; k++){\n\t\t\t\t\tif (lines[j][k]){\n\t\t\t\t\t\ttaskData[j].push(lines[j][k]);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\t\t\n\t\t\tfor (var j=0; j<taskData.length; j++){\n\t\t\t\tif (taskData[j].length){\n\t\t\t\t\tvar proc = {\n\t\t\t\t\t\t'name'\t: taskData[j][7],\n\t\t\t\t\t\t'cpu'\t: taskData[j][6],\n\t\t\t\t\t\t'msw'\t: taskData[j][2],\n\t\t\t\t\t\t'csw'\t: taskData[j][3]\n\t\t\t\t\t};\n\t\t\t\t\tif (proc.name === 'ROOT') rootCPU = proc.cpu*0.01;\n\t\t\t\t\t// ignore uninteresting data\n\t\t\t\t\tif (proc && proc.name && proc.name !== 'ROOT' && proc.name !== 'NAME' && proc.name !== 'IRQ29:'){\n\t\t\t\t\t\toutput.push(proc);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\n\t\t\tfor (var j=0; j<output.length; j++){\n\t\t\t\tif (output[j].cpu){\n\t\t\t\t\tbela += parseFloat(output[j].cpu);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tbela += data.belaLinux * rootCPU;\t\n\n\t\t}\n\n\t\t$('#ide-cpu').html('IDE: '+(ide*rootCPU).toFixed(1)+'%');\n\t\t$('#bela-cpu').html('Bela: '+( bela ? bela.toFixed(1)+'%' : '--'));\n\t\t\n\t\tif (bela && (ide*rootCPU + bela) > 80){\n\t\t\t$('#ide-cpu, #bela-cpu').css('color', 'red');\n\t\t} else {\n\t\t\t$('#ide-cpu, #bela-cpu').css('color', 'black');\n\t\t}\n\t\t\n\t\tif (!bela) $('#msw-cpu').html('MSW: --').css('color', 'black');\n\t\tmodeswitches = 0;\n\t}\n\t\n\t__msw(value){\n\t\t$('#msw-cpu').html('MSW: '+value);\n\t\tif (value > modeswitches) this.emit('mode-switch-warning', value);\n\t\tif (value > 0) $('#msw-cpu').css('color', 'red');\n\t\tmodeswitches = value;\n\t}\n\t\n\t_cpuMonitoring(value){\n\t\tif (parseInt(value))\n\t\t\t$('#ide-cpu, #bela-cpu').css('visibility', 'visible');\n\t\telse\n\t\t\t$('#ide-cpu, #bela-cpu').css('visibility', 'hidden');\n\t}\n\t\n}\n\nmodule.exports = ToolbarView;","var EventEmitter = require('events').EventEmitter;\n\nclass View extends EventEmitter{\n\n\tconstructor(CSSClassName, models, settings){\n\t\tsuper();\n\t\tthis.className = CSSClassName;\n\t\tthis.models = models;\n\t\tthis.settings = settings;\n\t\tthis.$elements = $('.'+CSSClassName);\n\t\tthis.$parents = $('.'+CSSClassName+'-parent');\n\t\t\n\t\tif (models){\n\t\t\tfor (var i=0; i<models.length; i++){\n\t\t\t\tmodels[i].on('change', (data, changedKeys) => {\n\t\t\t\t\tthis.modelChanged(data, changedKeys);\n\t\t\t\t});\n\t\t\t\tmodels[i].on('set', (data, changedKeys) => {\n\t\t\t\t\tthis.modelSet(data, changedKeys);\n\t\t\t\t});\n\t\t\t}\n\t\t}\n\t\t\n\t\tthis.$elements.filter('select').on('change', (e) => this.selectChanged($(e.currentTarget), e));\n\t\tthis.$elements.filter('input').on('input', (e) => this.inputChanged($(e.currentTarget), e));\n\t\tthis.$elements.filter('input[type=checkbox]').on('change', (e) => this.inputChanged($(e.currentTarget), e));\n\t\tthis.$elements.filter('button').on('click', (e) => this.buttonClicked($(e.currentTarget), e));\n\t\t\n\t}\n\t\n\tmodelChanged(data, changedKeys){\n\t\tfor (let value of changedKeys){\n\t\t\tif (this['_'+value]){\n\t\t\t\tthis['_'+value](data[value], data, changedKeys);\n\t\t\t}\n\t\t}\n\t}\n\tmodelSet(data, changedKeys){\n\t\tfor (let value of changedKeys){\n\t\t\tif (this['__'+value]){\n\t\t\t\tthis['__'+value](data[value], data, changedKeys);\n\t\t\t}\n\t\t}\n\t}\n\t\n\tselectChanged(element, e){}\n\tbuttonClicked(element, e){}\n\t\n\tprintElements(){\n\t\tconsole.log('elements:', this.$elements, 'parents:', this.$parents);\n\t}\n\t\t\n}\n\nmodule.exports = View;","'use strict';\nvar EventEmitter = require('events').EventEmitter;\n//var $ = require('jquery-browserify');\n\nvar enabled = true, scrollEnabled = true, suspended = false;\n\n// module variables\nvar numElements = 0, maxElements = 200, consoleDelete = true;\n\nclass Console extends EventEmitter {\n\n\tconstructor(){\n\t\tsuper();\n\t\tthis.$element = $('#beaglert-consoleWrapper');\n\t\tthis.parent = document.getElementById('beaglert-console');\n\t}\n\t\n\tblock(){\n\t\tenabled = false;\n\t}\n\tunblock(){\n\t\tenabled = true;\n\t}\n\t\n\tprint(text, className, id, onClick){\n\t\tif (!enabled) return;\n\t\t\n\t\t// this is a faster way maybe?\n\t\t//var str = '<div '+(id ? 'id=\"'+id+'\" ' : '') +'class=\"beaglert-console-'+className+'\"><span>'+text+'</span></div>';\n\t\t//this.$element.append(str);\n\t\t\n\t\tvar el = $('<div></div>').addClass('beaglert-console-'+className).appendTo(this.$element);\n\t\tif (id) el.prop('id', id);\n\t\t$('<span></span>').html(text).appendTo(el);\n\t\t\n\t\tif (numElements++ > maxElements) this.clear(numElements/4);\n\t\tif (onClick) el.on('click', onClick);\n\t\treturn el;\n\t}\n\n\t// log an unhighlighted message to the console\n\tlog(text, css){\n\t\n\t\tif (suspended) return;\n\t\t\n\t\tif (!consoleDelete && numElements > maxElements){\n\t\t\t//console.log('cleared & rejected', numElements, text.split('\\n').length);\n\t\t\tthis.clear(numElements - maxElements/2);\n\t\t\tsuspended = true;\n\t\t\tsetTimeout( () => suspended = false, 1000);\n\t\t\tthis.warn('Too many messages have been printed to the console too quickly. Reduce your printing frequency');\n\t\t} else {\n\t\t\tthis.checkScroll();\n\t\t\tvar msgs = text.split('\\n');\n\t\t\tvar str = '';\n\t\t\tfor (let i=0;  i<msgs.length; i++){\n\t\t\t\tif (msgs[i] !== '' && msgs[i] !== ' '){\n\t\t\t\t\t//this.print(msgs[i], css || 'log');\n\t\t\t\t\tstr += '<div class=\"beaglert-console-'+(css || 'log')+'\"><span>'+msgs[i]+'</span></div>';\n\t\t\t\t\tnumElements++;\n\t\t\t\t}\n\t\t\t}\n\t\t\tthis.$element.append(str);\n\t\t\tif (numElements > maxElements) this.clear(numElements/4);\n\t\t\tthis.scroll();\n\t\t}\n\t}\n\t// log a warning message to the console\n\twarn(text, id){\n\t\n\t\t//this.checkScroll();\n\t\tscrollEnabled = true;\n\n\t\tvar msgs = text.split('\\n');\n\t\tfor (let i=0;  i<msgs.length; i++){\n\t\t\tif (msgs[i] !== ''){\n\t\t\t\tthis.print(msgs[i], 'warning', id);/*, function(){ \n\t\t\t\t\tvar $el = $(this);\n\t\t\t\t\t$el.addClass('beaglert-console-collapsed');\n\t\t\t\t\t$el.on('transitionend', () => {\n\t\t\t\t\t\tif ($el.hasClass('beaglert-console-collapsed')){\n\t\t\t\t\t\t\t$el.remove();\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t$el.addClass('beaglert-console-collapsed');\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\t\t\t\t});*/\n\t\t\t}\n\t\t}\n\t\tthis.scroll();\n\t}\n\t\n\tnewErrors(errors){\n\t\n\t\t//this.checkScroll();\n\t\tscrollEnabled = true;\n\t\t\n\t\t$('.beaglert-console-ierror, .beaglert-console-iwarning').remove();\n\t\t\n\t\tfor (let err of errors){\n\t\t\n\t\t\t// create the element and add it to the error object\n\t\t\tvar div = $('<div></div>').addClass('beaglert-console-i'+err.type)\n\t\t\t\n\t\t\t// create the link and add it to the element\n\t\t\tvar span = $('<span></span>').html(err.text.split('\\n').join(' ')+', line: '+(err.row+1)).appendTo(div);\n\t\t\t\n\t\t\t// add a button to copy the contents to the clipboard\n\t\t\tvar copyButton = $('<div></div>').addClass('clipboardButton').appendTo(div);\n\t\t\tvar clipboard = new Clipboard(copyButton[0], {\n\t\t\t\ttarget: function(trigger) {\n\t\t\t\t\treturn $(trigger).siblings('span')[0];\n\t\t\t\t}\n\t\t\t});\n\t\t\t\n\t\t\tdiv.appendTo(this.$element);\n\t\t\t\n\t\t\tif (err.currentFile){\n\t\t\t\tspan.on('click', () => this.emit('focus', {line: err.row+1, column: err.column-1}) );\n\t\t\t} else {\n\t\t\t\tspan.on('click', () => this.emit('open-file', err.file, {line: err.row+1, column: err.column-1}) );\n\t\t\t}\n\t\t\t\n\t\t}\n\t\tthis.scroll();\n\t}\n\t\n\t// log a positive notification to the console\n\t// if persist is not true, the notification will be removed quickly\n\t// otherwise it will just fade\n\tnotify(notice, id){\n\t\n\t\tif (!enabled) return;\n\t\t\n\t\t//this.checkScroll();\n\t\tscrollEnabled = true;\n\t\t\n\t\t$('#'+id).remove();\n\t\tvar el = this.print(notice, 'notify', id);\n\t\t\n\t\tthis.scroll();\n\t\t\n\t\treturn el;\n\t}\n\t\n\tfulfill(message, id, persist){\n\t\tif (!enabled) return;\n\t\tvar el = document.getElementById(id);\n\t\t//if (!el) el = this.notify(message, id);\n\t\tvar $el = $(el);\n\t\t$el.appendTo(this.$element);//.removeAttr('id');\n\t\t$el.html($el.html()+message);\n\t\tsetTimeout( () => $el.addClass('beaglert-console-faded'), 500);\n\t\tif (!persist){\n\t\t\t$el.on('transitionend', () => {\n\t\t\t\tif ($el.hasClass('beaglert-console-collapsed')){\n\t\t\t\t\t$el.remove();\n\t\t\t\t} else {\n\t\t\t\t\t$el.addClass('beaglert-console-collapsed');\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\t}\n\t\n\treject(message, id, persist){\n\t\tvar el = document.getElementById(id);\n\t\t//if (!el) el = this.notify(message, id);\n\t\tvar $el = $(el);\n\t\t$el.appendTo(this.$element);//.removeAttr('id');\n\t\t$el.html($el.html()+message);\n\t\t$el.addClass('beaglert-console-rejectnotification');\n\t\tsetTimeout( () => $el.removeClass('beaglert-console-rejectnotification').addClass('beaglert-console-faded'), 500);\n\t\t$el.on('click', () => $el.addClass('beaglert-console-collapsed').on('transitionend', () => $el.remove() ));\n\t}\n\t\n\t// clear the console\n\tclear(number, force){\n\t\tif (consoleDelete && !force) return;\n\t\tif (number){\n\t\t\t$(\"#beaglert-consoleWrapper > div:lt(\"+parseInt(number)+\")\").remove();\n\t\t\tnumElements -= parseInt(number);\n\t\t} else {\n\t\t\t$('#beaglert-consoleWrapper > div').remove();\n\t\t\tnumElements = 0;\n\t\t}\n\t}\n\t\n\tcheckScroll(){\n\t\tif (this.parent.scrollHeight-this.parent.scrollTop === this.parent.clientHeight){\n\t\t\tscrollEnabled = true;\n\t\t} else {\n\t\t\tscrollEnabled = false;\n\t\t}\n\t}\n\t\n\t// force the console to scroll to the bottom\n\tscroll(){\n\t\tif (scrollEnabled){\n\t\t\tscrollEnabled = false;\n\t\t\tsetTimeout((() => this.parent.scrollTop = this.parent.scrollHeight), 0);\n\t\t}\n\t}\n\t\n\tsetConsoleDelete(to){\n\t\tconsoleDelete = to;\n\t}\n};\n\nmodule.exports = new Console();\n\n// gracefully remove a console element after an event ((this) must be bound to the element)\n/*function dismiss(){\n\tif (IDE.getSetting('consoleAnimations')) $(this).addClass('beaglert-console-collapsed');\n\tsetTimeout(() => {\n\t\tif ($.contains(parent, this)){\n\t\t\t$(this).remove();\n\t\t\tnumElements -= 1;\n\t\t}\n\t}, 500);\n}*/","//var $ = require('jquery-browserify');\nvar IDE;\n\n$(() => {\n\tIDE = require('./IDE-browser');\n});\n\n","var Range = ace.require('ace/range').Range;\nvar Anchor = ace.require('ace/anchor').Anchor;\nvar buf = new (require('./CircularBuffer'))(5);\nfor (let i=0; i<buf.capacity(); i++) buf.enq({});\n\nvar editor;\n\nvar parsingDeclaration = false;\nvar parsingBody = false;\nvar parsing;\n\nvar parensCount = 0;\n\nvar includes = [];\nvar typedefs = [];\nvar markers = [];\n\nvar highlights = {};\n\nvar contextType;\nvar contextName;\n\nvar parser = {\n\tinit(ed, langTools){\n\t\teditor = ed;\n\t\tthis.enabled = false;\n\t\tthis.langTools = langTools;\n\t},\n\t\n\tenable(status){\n\t\tthis.enabled = status;\n\t\tthis.doParse();\n\t},\n\t\n\thighlights(hls){\n\t\thighlights = hls;\n\t\tif (!hls.contextType || !hls.contextType.length){\n\t\t\tconsole.log('parser aborted');\n\t\t\treturn;\n\t\t}\n\t\tcontextType = hls.contextType[0].name;\n\t\thighlights.typerefs = [];\n\t\t//console.log(highlights);\n\t\t\n\t\tthis.doParse();\n\t\t\n\t\tthis.autoComplete();\n\t},\n\t\n\tautoComplete(){\n\t\t //console.log(highlights);\n\t\t// console.log(contextName, highlights[contextName]);\n\t\tif (!contextName) return;\n\t\t\n\t\t// context\n\t\tvar contextAutocompleteWords = [];\n\t\tfor (let item of highlights[contextName]){\n\t\t\tcontextAutocompleteWords.push(contextName+'->'+item.name);\n\t\t}\n\t\tvar contextWordCompleter = {\n\t\t\tgetCompletions: function(editor, session, pos, prefix, callback) {\n\t\t\t\tcallback(null, contextAutocompleteWords.map(function(word) {\n\t\t\t\t\treturn {\n\t\t\t\t\t\tcaption: word,\n\t\t\t\t\t\tvalue: word,\n\t\t\t\t\t\tmeta: 'BelaContext'\n\t\t\t\t\t};\n\t\t\t\t}));\n\n\t\t\t}\n\t\t}\n\t\tthis.langTools.addCompleter(contextWordCompleter);\n\t\t\n\t\t// class members\n\t\tvar classAutocompleteWords = [];\n\t\tfor (let typedef of highlights['typedef']){\n\t\t\tclassAutocompleteWords.push(typedef.name);\n\t\t}\n\t\tfor (let typeref of highlights['typerefs']){\n\t\t\tfor (let item of highlights[typeref.id.name]){\n\t\t\t\tclassAutocompleteWords.push(typeref.name+'.'+item.name);\n\t\t\t}\n\t\t}\n\t\tvar classWordCompleter = {\n\t\t\tgetCompletions: function(editor, session, pos, prefix, callback) {\n\t\t\t\tcallback(null, classAutocompleteWords.map(function(word) {\n\t\t\t\t\treturn {\n\t\t\t\t\t\tcaption: word,\n\t\t\t\t\t\tvalue: word,\n\t\t\t\t\t\tmeta: 'Bela'\n\t\t\t\t\t};\n\t\t\t\t}));\n\n\t\t\t}\n\t\t}\n\t\tthis.langTools.addCompleter(classWordCompleter);\n\t\t\n\t\t// utilities\n\t\tvar utilityAutocompleteWords = [];\n\t\tfor (let utility of highlights['utility']){\n\t\t\tutilityAutocompleteWords.push(utility.name);\n\t\t}\n\t\tvar utilityWordCompleter = {\n\t\t\tgetCompletions: function(editor, session, pos, prefix, callback) {\n\t\t\t\tcallback(null, utilityAutocompleteWords.map(function(word) {\n\t\t\t\t\treturn {\n\t\t\t\t\t\tcaption: word,\n\t\t\t\t\t\tvalue: word,\n\t\t\t\t\t\tmeta: 'Utilities'\n\t\t\t\t\t};\n\t\t\t\t}));\n\n\t\t\t}\n\t\t}\n\t\tthis.langTools.addCompleter(utilityWordCompleter);\n\t},\n\t\n\tgetMarkers(){\n\t\treturn markers;\n\t},\n\t\n\tgetIncludes(){\n\t\treturn includes;\n\t},\n\t\n\tparse(callback){\n\t\t\n\t\tif (this.parseTimeout) clearTimeout(this.parseTimeout);\n\t\tthis.parseTimeout = setTimeout( () => this.doParse(callback), 100);\n\t\t\n\t},\n\t\n\tdoParse(callback){\n\t\tfor (let marker of markers){\n\t\t\teditor.session.removeMarker(marker.id);\n\t\t}\n\t\tif (!this.enabled) return;\n\t\t// console.time('parse time');\n\t\t\n\t\tvar iterator = new TokenIterator(editor.getSession(), 0, 0);\n\t\tvar token = iterator.getCurrentToken();\n\t\t\n\t\t// are we parsing a file with Bela API included?\n\t\tvar parsingAPI = false;\n\n\t\tincludes = [];\n\t\ttypedefs = [];\n\t\tmarkers = [];\n\n\t\twhile (token) {\n\t\t\n\t\t\ttoken.range = new Range(iterator.getCurrentTokenRow(), iterator.getCurrentTokenColumn(), iterator.getCurrentTokenRow(), iterator.getCurrentTokenColumn()+token.value.length);\n\t\t\t//console.log(token);\n\t\t\t\n\t\t\tif (parsingDeclaration){\n\t\t\t\tparseDeclaration(token);\n\t\t\t} else if (parsingBody){\n\t\t\t\tparseBody(token);\n\t\t\t} else {\n\t\t\t\n\t\t\t\t// typedefs\n\t\t\t\tif (typedefs.length &&\n\t\t\t\t\t\tbuf.get(1).type === 'identifier' && typedefs.indexOf(buf.get(1).value) !== -1 &&\n\t\t\t\t\t\tbuf.get(0).type === 'text' && buf.get(0).value === ' ' &&\n\t\t\t\t\t\ttoken.type === 'identifier'){\n\t\t\t\t\tlet link = highlights['typedef'][searchHighlightsFor('typedef', buf.get(1).value)];\n\t\t\t\t\taddMarker(buf.get(1), link);\n\t\t\t\t\thighlights.typerefs.push({\n\t\t\t\t\t\tname: \ttoken.value,\n\t\t\t\t\t\tid: \tlink\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t\n\t\t\t\t// includes\n\t\t\t\tif (buf.get(0).type === 'keyword' && buf.get(0).value === '#include'){\n\t\t\t\t\n\t\t\t\t\tlet include = token.value.split('<').pop().split('>')[0].split('.')[0];\t\t\t\t\n\t\t\t\t\t\n\t\t\t\t\tif (include === 'Bela') parsingAPI = true;\n\t\t\t\t\t\n\t\t\t\t\tif (searchHighlightsFor('header', include) !== -1){\n\t\t\t\t\t\tincludes.push(include);\n\t\t\t\t\t\tif (searchHighlightsFor('typedef', include) !== -1){\n\t\t\t\t\t\t\ttypedefs.push(include);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t// function detection\n\t\t\t\t} else if (parsingAPI &&\n\t\t\t\t\t\tbuf.get(1).type === 'storage.type' && buf.get(1).value === 'bool' &&\n\t\t\t\t\t\tbuf.get(0).type === 'text' && buf.get(0).value === ' ' &&\n\t\t\t\t\t\ttoken.type === 'identifier' && token.value === 'setup' ){\n\t\t\t\t\t//console.log('parsing declaration of setup');\n\t\t\t\t\tparsingDeclaration = true;\n\t\t\t\t\tparsing = token.value;\n\t\t\t\t\tif (highlights['api']) addMarker(token, highlights['api'][searchHighlightsFor('api', 'setup')]);\n\t\t\t\t} else if (parsingAPI &&\n\t\t\t\t\t\tbuf.get(1).type === 'storage.type' && buf.get(1).value === 'void' &&\n\t\t\t\t\t\tbuf.get(0).type === 'text' && buf.get(0).value === ' ' &&\n\t\t\t\t\t\ttoken.type === 'identifier' && token.value === 'render' ){\n\t\t\t\t\t//console.log('parsing declaration of  render');\n\t\t\t\t\tparsingDeclaration = true;\n\t\t\t\t\tparsing = token.value;\n\t\t\t\t\tif (highlights['api']) addMarker(token, highlights['api'][searchHighlightsFor('api', 'render')]);\n\t\t\t\t} else if (parsingAPI &&\n\t\t\t\t\t\tbuf.get(1).type === 'storage.type' && buf.get(1).value === 'void' &&\n\t\t\t\t\t\tbuf.get(0).type === 'text' && buf.get(0).value === ' ' &&\n\t\t\t\t\t\ttoken.type === 'identifier' && token.value === 'cleanup' ){\n\t\t\t\t\t//console.log('parsing declaration of  cleanup');\n\t\t\t\t\tparsingDeclaration = true;\n\t\t\t\t\tparsing = token.value;\n\t\t\t\t\tif (highlights['api']) addMarker(token, highlights['api'][searchHighlightsFor('api', 'cleanup')]);\n\t\t\t\t}\n\t\t\t\t\n\t\t\t}\n\t\t\t\n\t\t\t//if (highlights && highlights.typerefs && highlights.typerefs.length){\n\t\t\t\tlet index = searchHighlightsFor('typerefs', token.value);\n\t\t\t\tif (index !== -1){\n\t\t\t\t\taddMarker(token, highlights['typerefs'][index].id);\n\t\t\t\t} else if (buf.get(1).type === 'identifier'){\n\t\t\t\t\tlet index = searchHighlightsFor('typerefs', buf.get(1).value);\n\t\t\t\t\t//console.log('typeref index', index, token.value);\n\t\t\t\t\tif (index !== -1 &&\n\t\t\t\t\t\t\tbuf.get(0).type === 'punctuation.operator' && buf.get(0).value === '.'){\n\t\t\t\t\t\tlet typedef = highlights['typerefs'][index].id.name;\n\t\t\t\t\t\t//let newIndex = searchHighlightsFor(typedef, token.value);\n\t\t\t\t\t\t//console.log(newIndex, highlights[typedef][newIndex]);\n\t\t\t\t\t\taddMarker(token, highlights[typedef][searchHighlightsFor(typedef, token.value)]);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\n\t\t\t//}\n\t\t\t\t\t\n\t\t\t\n\t\t\tbuf.enq(token);\t\t\t\n\t\t\ttoken = iterator.stepForward();\n\t\t\t\n\t\t}\n\t\t\n\t\tif (callback) callback();\n\t\t\n\t\t//console.log('includes', includes);\n\t\t//console.log('typedefs', typedefs);\n\t\t//console.log('markers', markers);\n\t\t//console.log(editor.session.getMarkers());\n\t\t//console.timeEnd('parse time');\n\t}\n};\n\nfunction parseDeclaration(token){\n\tif (token.type === 'paren.lparen' && token.value === '('){\n\t\tparensCount += 1;\n\t} else if (token.type === 'paren.rparen' && token.value === ')'){\n\t\tparensCount -= 1;\n\t\tif (parensCount <= 0){\n\t\t\tparensCount = 0;\n\t\t\t// console.log('parsing body of', parsing);\n\t\t\tparsingDeclaration = false;\n\t\t\tparsingBody = true;\n\t\t}\n\t} else if (\n\t\t\tbuf.get(0).type === 'keyword.operator' && buf.get(0).value === '*' &&\n\t\t\tbuf.get(1).type === 'text' && buf.get(1).value === ' ' &&\n\t\t\tbuf.get(2).type === 'identifier' && buf.get(2).value === contextType ){\n\t\tcontextName = token.value;\n\t\t// console.log('contextName', contextName);\n\t\taddMarker(token, highlights.contextType[0]);\n\t\taddMarker(buf.get(2), highlights.contextType[0]);\n\t}\n}\n\nfunction parseBody(token){\n\tif (token.type === 'paren.lparen' && token.value === '{'){\n\t\tparensCount += 1;\n\t} else if (token.type === 'paren.rparen' && token.value === '}'){\n\t\tparensCount -= 1;\n\t\tif (parensCount <= 0){\n\t\t\tparensCount = 0;\n\t\t\t// console.log('finished parsing body of', parsing);\n\t\t\tparsingBody = false;\n\t\t}\n\t} else if (token.type === 'identifier' && token.value === contextName){\n\t\t// console.log('context!');\n\t\taddMarker(token, highlights.contextType[0]);\n\t} else if (\n\t\t\tbuf.get(1).type === 'identifier' && buf.get(1).value === contextName &&\n\t\t\tbuf.get(0).type === 'keyword.operator' && buf.get(0).value === '->'){\n\t\tlet index = searchHighlightsFor(contextName, token.value);\n\t\tif (index !== -1) addMarker(token, highlights[contextName][index]);\n\t} else if (token.type === 'identifier'){\n\t\tlet index = searchHighlightsFor('utility', token.value);\n\t\tif (index !== -1) addMarker(token, highlights['utility'][index]);\n\t}\n}\n\nfunction addMarker(token, type){\n\tvar range = token.range;\n\tvar marker = {\n\t\ttoken,\n\t\ttype,\n\t\trange,\n\t\tid: \teditor.session.addMarker(range, \"bela-ace-highlight\", \"text\")//,\n\t\t//anchor:\tnew Anchor(editor.session.doc, range.start.row, range.start.column)\n\t};\n\t/*marker.anchor.on('change', function(e){\n\t\trange.setStart(e.value.row, e.value.column);\n\t\trange.setEnd(e.value.row, e.value.column + token.value.length);\n\t});*/ \n\tmarkers.push(marker);\n}\n\nfunction searchHighlightsFor(sub, val){\n\t//console.log('searching', sub)\n\t//console.log(highlights[sub]);\n\t//console.log('for', val);\n\tif (!highlights || !highlights[sub]) return -1;\n\tfor (let item of highlights[sub]){\n\t\tif (item.name === val){\n\t\t\treturn highlights[sub].indexOf(item);\n\t\t}\n\t}\n\treturn -1;\n}\n\nmodule.exports = parser;","var overlay\t= $('#overlay');\nvar parent\t= $('#popup');\nvar content\t= $('#popup-content');\nvar titleEl\t= parent.find('h1');\nvar subEl\t= parent.find('p');\nvar formEl\t= parent.find('form');\n\nvar popup = {\n\t\n\tshow(){\n\t\toverlay.addClass('active');\n\t\tparent.addClass('active');\n\t\tcontent.find('input[type=text]').first().trigger('focus');\n\t},\n\t\n\thide(keepOverlay){\n\t\tif (keepOverlay !== 'keep overlay') overlay.removeClass('active');\n\t\tparent.removeClass('active');\n\t\ttitleEl.empty();\n\t\tsubEl.empty();\n\t\tformEl.empty();\n\t},\n\t\n\toverlay(){\n\t\toverlay.toggleClass('active');\n\t},\n\t\n\tfind: selector => content.find(selector),\n\t\n\ttitle: text => titleEl.text(text),\n\tsubtitle: text => subEl.text(text),\n\tformEl: html => formEl.html(html),\n\t\n\tappend: child => content.append(child),\n\t\n\tform: formEl,\n\t\n\texampleChanged: example\n\t\n};\n\nmodule.exports = popup;\n\nfunction example(cb, arg, delay, cancelCb){\n\n\t// build the popup content\n\tpopup.title('Save your changes?');\n\tpopup.subtitle('You have made changes to an example project. If you continue, your changes will be lost. To keep your changes, click cancel and then Save As in the project manager tab');\n\t\n\tvar form = [];\n\tform.push('<button type=\"submit\" class=\"button popup-continue\">Continue</button>');\n\tform.push('<button type=\"button\" class=\"button popup-cancel\">Cancel</button>');\n\t\n\tpopup.form.append(form.join('')).off('submit').on('submit', e => {\n\t\te.preventDefault();\n\t\tsetTimeout(function(){\n\t\t\tcb(arg);\n\t\t}, delay);\n\t\tpopup.hide();\n\t});\n\t\t\n\tpopup.find('.popup-cancel').on('click', () => {\n\t\tpopup.hide();\n\t\tif (cancelCb) cancelCb();\n\t});\n\t\n\tpopup.show();\n\t\n\tpopup.find('.popup-continue').trigger('focus');\n\t\n}"],"preExistingComment":"//# sourceMappingURL=data:application/json;charset=utf-8;base64,"}